<% include ../../partials/header %>

    <% include ../../partials/nav %>

        <% include ../../partials/left-sidebar %>

            <style>
                .dropdown-menu {
                    min-width: 100% !important;
                }

                .dropdown-custom {
                    width: 100%;
                }

                .dropdown-content-custom {
                    background-color: #fff;
                    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
                    border: 1px solid #f1f1f1;
                    z-index: 1;
                    max-height: 250px;
                    overflow-y: scroll;
                    top: 38px !important;
                }
            </style>

            <!-- Main Content -->
            <section class="content" id="property_type_section">

                <% include ../../partials/content/header %>

                    <div class="container-fluid">
                        <div class="row clearfix">
                            <div class="col-lg-12">
                                <div class="card">
                                    <div class="body" v-on:scroll="handleScroll">
                                        <div class="container" v-if="type_section === 'add'">
                                            <div class="row clearfix">
                                                <div class="col-lg-8 offset-lg-2">
                                                    <div class="card" style="border: 1px solid rgb(155, 111, 193);">
                                                        <div class="header">
                                                            <h2><strong>Create</strong> New SubCategory </h2>
                                                            <ul class="header-dropdown m-r--5">
                                                                <li> <a href="javascript:void(0);"
                                                                        @click="remove_type_section" role="button"
                                                                        aria-haspopup="true" aria-expanded="false"><i
                                                                            class="material-icons">close</i></a>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <div class="body">
                                                            <div v-if="errorResponse!==null">
                                                                <div class="alert alert-danger"
                                                                    v-for="error in errorResponse">
                                                                    {{error.msg}}
                                                                    <button type="button" class="close"
                                                                        data-dismiss="alert" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            <div v-if="successResponse!==null">
                                                                <div class="alert alert-success">
                                                                    {{successResponse.msg}}
                                                                    <button type="button" class="close"
                                                                        data-dismiss="alert" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            <div class="row clearfix">
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Group</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="groupName" @keyup="filterGroupList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown" placeholder="select a Group">
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="groupSearchData({id: group._id, name: group.name})" v-for="(group, index) in groupFilter"
                                                                                :key="index" class="dropdown-item text-capitalize" href="">{{group.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">SubGroup</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="subgroupName" @keyup="filterSubGroupList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown"
                                                                            placeholder="select a SubGroup">
                                        
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="subgroupSearchData({id: subgroup._id, name: subgroup.name})"
                                                                                v-for="(subgroup, index) in subgroupFilter" :key="index"
                                                                                class="dropdown-item text-capitalize" href="">{{subgroup.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Category</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="categoryName" @keyup="filterCategoryList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown" placeholder="select a Category">
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="categorySearchData({id: category._id, name: category.name})"
                                                                                v-for="(category, index) in categoryFilter" :key="index" class="dropdown-item text-capitalize"
                                                                                href="">{{category.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">SubCategory <span style="color: red;">*</span></h6>
                                                                        <div class="form-group">
                                                                            <input type="text" v-model="name" class="form-control" placeholder="SubCategory Name">
                                                                        </div>
                                                                        </div>
                                                                        <div class="col-sm-6">
                                                                            <h6 class="mt-2 mb-2">Branch</h6>
                                                                            <div class="form-group">
                                                                                <select class="form-control"
                                                                                    v-model="branch">
                                                                                    <option value="">-- Select Branch --</option>
                                                                                    <option :value="{id: branch._id, name: branch.name}"
                                                                                        v-for="(branch, index) in allBranch" :key="index"
                                                                                        class="text-capitalize">{{branch.name}}</option>
                                                                                </select>
                                                                            </div>
                                                                        </div>        
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Opening Balance <span
                                                                            style="color: red;">*</span></h6>
                                                                    <div class="form-group">
                                                                        <input type="number" v-model="opening_balance"
                                                                            class="form-control"
                                                                            placeholder="Opening Balance">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Have Depreciation</h6>
                                                                    <div class="form-group">
                                                                        <div class="radio inlineblock m-r-20">
                                                                            <input type="radio"
                                                                                name="depreciation_value_condition"
                                                                                id="before_sell"
                                                                                v-model="depreciation_value_condition"
                                                                                class="with-gap" value="true">
                                                                            <label for="before_sell">Yes</label>
                                                                        </div>
                                                                        <div class="radio inlineblock">
                                                                            <input type="radio"
                                                                                name="depreciation_value_condition"
                                                                                id="after_sell"
                                                                                v-model="depreciation_value_condition"
                                                                                class="with-gap" value="false">
                                                                            <label for="after_sell">No</label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2" v-if="depreciation_value_condition == 'true'">Depreciation value</h6>
                                                                    <div class="form-group"
                                                                        v-if="depreciation_value_condition == 'true'">
                                                                        <input type="number"
                                                                            v-model="depreciation_value"
                                                                            class="form-control"
                                                                            placeholder="Depreciation value">
                                                                    </div>
                                                                </div>   
                                                                <div class="col-sm-12">
                                                                    <button class="btn btn-primary btn-round mb-3" @click="getBranchSelect">Add</button>
                                                                </div>
                                                                <div class="col-sm-12 mb-3">
                                                                    <span class="badge badge-primary text-capitalize mr-2"
                                                                        style="font-size: 12px; cursor: pointer;"
                                                                        v-for="(selectedBranch, index) in selectedBranches"
                                                                        :key="index">{{selectedBranch.branch_name + " - " + selectedBranch.opening_balance + ", "+ selectedBranch.depreciation_amount}} <span
                                                                            @click="removeBranchSelect(index)"
                                                                            aria-hidden="true">&times;</span></span>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Warehouse Opening<span
                                                                            style="color: red;">*</span></h6>
                                                                    <div class="form-group">
                                                                        <input type="number" v-model="warehouse_opening_balance"
                                                                            class="form-control"
                                                                            placeholder="Warehouse Opening">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Warehouse Depreciation</h6>
                                                                    <div class="form-group">
                                                                        <input type="number"
                                                                            v-model="warehouse_depreciation_value"
                                                                            class="form-control"
                                                                            placeholder="Warehouse Depreciation">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Account No</h6>
                                                                    <div class="form-group">
                                                                        <input type="text" v-model="account_no" class="form-control" placeholder="Account Number">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Address</h6>
                                                                    <div class="form-group">
                                                                        <textarea class="form-control" v-model="address" placeholder="Write a Address" rows="4"></textarea>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row clearfix">
                                                                <div class="col-sm-12">
                                                                    <button type="submit" :disabled="isDisable"
                                                                        @click="addItem"
                                                                        class="btn btn-primary btn-round">Submit</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="container" v-if="type_section == 'edit'">
                                            <div class="row clearfix">
                                                <div class="col-lg-8 offset-lg-2">
                                                    <div class="card" style="border: 1px solid rgb(155, 111, 193);">
                                                        <div class="header">
                                                            <h2><strong>Edit</strong> SubCategory </h2>
                                                            <ul class="header-dropdown m-r--5">
                                                                <li> <a href="javascript:void(0);"
                                                                        @click="remove_type_section" role="button"
                                                                        aria-haspopup="true" aria-expanded="false"><i
                                                                            class="material-icons">close</i></a>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <div class="body">
                                                            <div v-if="errorResponse!==null">
                                                                <div class="alert alert-danger"
                                                                    v-for="error in errorResponse">
                                                                    {{error.msg}}
                                                                    <button type="button" class="close"
                                                                        data-dismiss="alert" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            <div v-if="successResponse!==null">
                                                                <div class="alert alert-success">
                                                                    {{successResponse.msg}}
                                                                    <button type="button" class="close"
                                                                        data-dismiss="alert" aria-label="Close">
                                                                        <span aria-hidden="true">&times;</span>
                                                                    </button>
                                                                </div>
                                                            </div>
                                                            <div class="row clearfix">
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Group</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="groupName" @keyup="filterGroupList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown" placeholder="select a Group">
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="groupSearchData({id: group._id, name: group.name})" v-for="(group, index) in groupFilter"
                                                                                :key="index" class="dropdown-item text-capitalize" href="">{{group.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">SubGroup</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="subgroupName" @keyup="filterSubGroupList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown"
                                                                            placeholder="select a SubGroup">
                                        
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="subgroupSearchData({id: subgroup._id, name: subgroup.name})"
                                                                                v-for="(subgroup, index) in subgroupFilter" :key="index"
                                                                                class="dropdown-item text-capitalize" href="">{{subgroup.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Category</h6>
                                                                    <div class="form-group  dropdown dropdown-custom">
                                                                        <input type="text" v-model="categoryName" @keyup="filterCategoryList()" class="form-control searchField dropdown-toggle"
                                                                            data-toggle="dropdown" placeholder="select a Category">
                                                                        <div class="dropdown-menu dropdown-content-custom">
                                                                            <a @click.prevent="categorySearchData({id: category._id, name: category.name})"
                                                                                v-for="(category, index) in categoryFilter" :key="index" class="dropdown-item text-capitalize"
                                                                                href="">{{category.name}}</a>
                                                                        </div>
                                                                    </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">SubCategory Name</h6>
                                                                        <div class="form-group">
                                                                            <input type="text" v-model="name" class="form-control" placeholder="SubCategory Name">
                                                                        </div>
                                                                        </div>
                                                                        <div class="col-sm-6">
                                                                            <h6 class="mt-2 mb-2">Branch</h6>
                                                                            <div class="form-group">
                                                                                <select class="form-control"
                                                                                    v-model="branch">
                                                                                    <option value="">-- Select Branch --</option>
                                                                                    <option :value="{id: branch._id, name: branch.name}"
                                                                                        v-for="(branch, index) in allBranch" :key="index"
                                                                                        class="text-capitalize">{{branch.name}}</option>
                                                                                </select>
                                                                            </div>
                                                                        </div>        
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Opening Balance <span
                                                                            style="color: red;">*</span></h6>
                                                                    <div class="form-group">
                                                                        <input type="number" v-model="opening_balance"
                                                                            class="form-control"
                                                                            placeholder="Opening Balance">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Have Depreciation</h6>
                                                                    <div class="form-group">
                                                                        <div class="radio inlineblock m-r-20">
                                                                            <input type="radio"
                                                                                name="depreciation_value_condition"
                                                                                id="before_sell"
                                                                                v-model="depreciation_value_condition"
                                                                                class="with-gap" value="true">
                                                                            <label for="before_sell">Yes</label>
                                                                        </div>
                                                                        <div class="radio inlineblock">
                                                                            <input type="radio"
                                                                                name="depreciation_value_condition"
                                                                                id="after_sell"
                                                                                v-model="depreciation_value_condition"
                                                                                class="with-gap" value="false">
                                                                            <label for="after_sell">No</label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2" v-if="depreciation_value_condition == 'true'">Depreciation value</h6>
                                                                    <div class="form-group"
                                                                        v-if="depreciation_value_condition == 'true'">
                                                                        <input type="number"
                                                                            v-model="depreciation_value"
                                                                            class="form-control"
                                                                            placeholder="Depreciation value">
                                                                    </div>
                                                                </div>   
                                                                <div class="col-sm-12">
                                                                    <button class="btn btn-primary btn-round mb-3" @click="getBranchSelect">Add</button>
                                                                </div>
                                                                <div class="col-sm-12 mb-3">
                                                                    <span class="badge badge-primary text-capitalize mr-2"
                                                                        style="font-size: 12px; cursor: pointer;"
                                                                        v-for="(selectedBranch, index) in selectedBranches"
                                                                        :key="index">{{selectedBranch.branch_name + " - " + selectedBranch.opening_balance+ ", "+ selectedBranch.depreciation_amount}} <span
                                                                            @click="removeBranchSelect(index)"
                                                                            aria-hidden="true">&times;</span></span>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Warehouse Opening<span
                                                                            style="color: red;">*</span></h6>
                                                                    <div class="form-group">
                                                                        <input type="number" v-model="warehouse_opening_balance"
                                                                            class="form-control"
                                                                            placeholder="Warehouse Opening">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <h6 class="mt-2 mb-2">Warehouse Depreciation</h6>
                                                                    <div class="form-group">
                                                                        <input type="number"
                                                                            v-model="warehouse_depreciation_value"
                                                                            class="form-control"
                                                                            placeholder="Warehouse Depreciation">
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Account No</h6>
                                                                    <div class="form-group">
                                                                        <input type="text" v-model="account_no" class="form-control" placeholder="Account Number">
                                                                    </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">Address</h6>
                                                                        <div class="form-group">
                                                                            <textarea class="form-control" v-model="address" placeholder="Write a Address" rows="4"></textarea>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                    <h6 class="mt-2 mb-2">Active</h6>
                                                                    <div class="form-group">
                                                                        <div class="radio inlineblock m-r-20">
                                                                            <input type="radio" name="isActive"
                                                                                id="active_yes" v-model="isActive"
                                                                                class="with-gap" :value="true">
                                                                            <label for="active_yes">Yes</label>
                                                                        </div>
                                                                        <div class="radio inlineblock">
                                                                            <input type="radio" name="isActive"
                                                                                id="active_no" v-model="isActive"
                                                                                class="with-gap" :value="false">
                                                                            <label for="active_no">No</label>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row clearfix">
                                                                <div class="col-sm-12">
                                                                    <button type="submit" :disabled="isDisable"
                                                                        @click="updateProjectType"
                                                                        class="btn btn-primary btn-round">Submit</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row justify-content-center clearfix">
                                            <div class="col-lg-5">
                                                <div v-if="type_section === 'delete'">
                                                    <div v-if="errorResponse!==null">
                                                        <div class="alert alert-danger" v-for="error in errorResponse">
                                                            {{error.msg}}
                                                            <button type="button" class="close" data-dismiss="alert"
                                                                aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                    <div v-if="successResponse!==null">
                                                        <div class="alert alert-success">
                                                            {{successResponse.msg}}
                                                            <button type="button" class="close" data-dismiss="alert"
                                                                aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="container" v-if="type_section == 'search'">
                                            <div class="row clearfix">
                                                <div class="col-lg-8 offset-lg-2">
                                                    <div class="card" style="border: 1px solid rgb(155, 111, 193);">
                                                        <div class="header">
                                                            <h2><strong>Search</strong> SubCategory </h2>
                                                            <ul class="header-dropdown m-r--5">
                                                                <li> <a href="javascript:void(0);" @click="remove_type_section" role="button"
                                                                        aria-haspopup="true" aria-expanded="false"><i class="material-icons">close</i></a>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <div class="body">
                                                            <form @submit.prevent="searchData">
                                                                <div class="row clearfix">
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">Group</h6>
                                                                        <div class="form-group  dropdown dropdown-custom">
                                                                            <input type="text" v-model="groupName" @keyup="filterGroupList()"
                                                                                class="form-control searchField dropdown-toggle" data-toggle="dropdown"
                                                                                placeholder="select a Group">
                                            
                                                                            <div class="dropdown-menu dropdown-content-custom">
                                                                                <a @click.prevent="groupSearchData({id: group._id, name: group.name})" v-for="(group, index) in groupFilter"
                                                                                    :key="index" class="dropdown-item text-capitalize" href="">{{group.name}}</a>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">SubGroup</h6>
                                                                        <div class="form-group  dropdown dropdown-custom">
                                                                            <input type="text" v-model="subgroupName" @keyup="filterSubGroupList()"
                                                                                class="form-control searchField dropdown-toggle" data-toggle="dropdown"
                                                                                placeholder="select a SubGroup">
                                            
                                                                            <div class="dropdown-menu dropdown-content-custom">
                                                                                <a @click.prevent="subgroupSearchData({id: subgroup._id, name: subgroup.name})"
                                                                                    v-for="(subgroup, index) in subgroupFilter" :key="index"
                                                                                    class="dropdown-item text-capitalize" href="">{{subgroup.name}}</a>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-sm-12">
                                                                        <h6 class="mt-2 mb-2">Category</h6>
                                                                        <div class="form-group  dropdown dropdown-custom">
                                                                            <input type="text" v-model="categoryName" @keyup="filterCategoryList()"
                                                                                class="form-control searchField dropdown-toggle" data-toggle="dropdown"
                                                                                placeholder="select a Category">
                                            
                                                                            <div class="dropdown-menu dropdown-content-custom">
                                                                                <a @click.prevent="categorySearchData({id: category._id, name: category.name})"
                                                                                    v-for="(category, index) in categoryFilter" :key="index" class="dropdown-item text-capitalize"
                                                                                    href="">{{category.name}}</a>
                                                                            </div>
                                                                        </div>
                                                                        </div>
                                                                        <div class="col-sm-12">
                                                                            <h6 class="mt-2 mb-2">SubCategory Name</h6>
                                                                            <div class="form-group">
                                                                                <input type="text" v-model="name" class="form-control" placeholder="SubCategory Name">
                                                                            </div>
                                                                        </div>
                                                                </div>
                                                                <div class="row clearfix">
                                                                    <div class="col-sm-12">
                                                                        <button type="submit" :disabled="isDisable"
                                                                            class="btn btn-primary btn-round">Search</button>
                                                                    </div>
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <button class="btn btn-primary float-right btn-xs" type="button"
                                                    @click="add_type_section"
                                                    v-show="adminAccess.length>0?adminAccess.includes('chart of accounts subcategory create'):false">Add
                                                    New</button>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-7 col-md-6 col-lg-5 col-xl-4">
                                                <button class="btn btn-primary btn-xs" type="button" @click="search_type_section">Advance
                                                    Search</button>
                                            </div>
                                        </div>
                                        <div class="row" v-if="isLoading">
                                            <div class="spinner-border text-primary mt-4" style="margin: 0 auto"
                                                role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </div>
                                        <div class="table-responsive" v-else>
                                            <table
                                                class="table td_2 table-striped table-hover js-basic-example dataTable"
                                                id="infoListTable">
                                                <thead>
                                                    <tr>
                                                        <th>#</th>
                                                        <th> Serial No</th>
                                                        <th>Create Date</th>
                                                        <th>Name, Category, Subgroup & Group</th>
                                                        <th>Opening Balance</th>
                                                        <th>Active</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody v-if="allListItem.length > 0">
                                                    <tr v-for="(item, index) in allListItem" :key="item._id">
                                                        <td style="vertical-align: middle;">{{ index + 1 }}</td>
                                                        <td
                                                            style="text-transform: capitalize; vertical-align: middle;">
                                                            {{item.serialNo}}
                                                        </td>
                                                        <td style="text-transform: capitalize; vertical-align: middle;">
                                                            {{item.dateTime}}</td>
                                                        <td style="text-transform: capitalize; vertical-align: middle;">
                                                            {{item.name}}<br/>
                                                            {{item.category ?
                                                                item.category.name : ""}}<br/>
                                                            {{item.subgroup ?
                                                                    item.subgroup.name : ""}}<br/>
                                                            {{item.group ?
                                                                        item.group.name : ""}}        
                                                        </td>
                                                        <td style="text-transform: capitalize; vertical-align: middle;">
                                                            <div v-for="branchInfo in item.branchWiseOpening">
                                                                <span>{{branchInfo.branch.name +' - '+ branchInfo.opening_balance+', '+branchInfo.depreciation_amount}}</span>
                                                            </div>
                                                            <div>
                                                                <span>{{'warehouse - ' + item.warehouse_opening_balance +', '+ item.warehouse_depreciation_amount}}</span>
                                                            </div>
                                                        </td>
                                                        <td style="text-transform: capitalize; vertical-align: middle;">
                                                            {{item.active ? "Yes" : "No"}}
                                                        </td>
                                                        <td>
                                                            <button :disabled="isDisable"
                                                                @click="edit_item_section(item._id)"
                                                                class="btn btn-icon btn-neutral btn-icon-mini"><i
                                                                    class="zmdi zmdi-edit"
                                                                    v-show="adminAccess.length>0?adminAccess.includes('chart of accounts subcategory update'):false"></i></button>
                                                            <button :disabled="isDisable" @click="deleteItem(item._id)"
                                                                class="btn btn-icon btn-neutral btn-icon-mini"
                                                                v-show="adminAccess.length>0?adminAccess.includes('chart of accounts subcategory delete'):false"><i
                                                                    class="zmdi zmdi-delete"></i></button>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                                <tbody v-else>
                                                    <tr>
                                                        <td class="text-center" colspan="10">No data found here</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>

            </section>

            <script>
                var pageNo = 1

                new Vue({
                    el: '#property_type_section',
                    data: {
                        allListItem: [],
                        searchType: 'name',
                        searchText: '',
                        allCategory: [],
                        allBranch: [],
                        selectedBranches: [],
                        name: '',
                        branch: '',
                        category: "",
                        depreciation_value_condition: 'false',
                        type_section: null,
                        editItemID: '',
                        editItemValue: '',
                        errorResponse: null,
                        successResponse: null,
                        isDisable: false,
                        isLoading: true,
                        isNextDataLastEmpty: false,
                        searchQueryString: '',
                        adminAccess: [],
                        depreciation_value: 0,
                        warehouse_depreciation_value: 0,
                        opening_balance: 0,
                        warehouse_opening_balance: 0,
                        groupName: "",
                        group: "",
                        groupFilter: [],
                        subgroupName: "",
                        subgroup: "",
                        subgroupFilter: [],
                        categoryFilter: [],
                        categoryName: "",
                        isActive: true,
                        account_no: null,
                        address: ''
                    },
                    mounted() {
                        this.adminAccess = '<%= data.adminInfo.admin_roles %>'.split(',')
                        this.getAllItemData()
                        this.getGroupInfo()
                        this.getBranchInfo()
                    },
                    created() {
                        window.addEventListener('scroll', this.handleScroll);
                    },
                    destroyed() {
                        window.removeEventListener('scroll', this.handleScroll);
                    },
                    methods: {
                        searchData() {
                            pageNo = 1
                            this.allListItem = []
                            this.searchQueryString = ''

                            if (this.group != "") {
                                this.searchQueryString += 'group=' + this.group
                            }
                            if (this.subgroup != "") {
                                this.searchQueryString += '&&subgroup=' + this.subgroup
                            }
                            if (this.category != "") {
                                this.searchQueryString += '&&category=' + this.category
                            }
                            if (this.name != "") {
                                this.searchQueryString += '&&name=' + this.name
                            }
                            this.getAllItemData()
                        },
                        getBranchSelect() {
                            let branchData = this.branch
                            if (this.selectedBranches.filter((selectedBranch => selectedBranch.branch === branchData.id))
                                        .length == 0) {
                                this.selectedBranches.push({
                                    branch_name: branchData.name,
                                    branch: branchData.id,
                                    opening_balance: this.opening_balance,
                                    depreciation_amount: this.depreciation_value,
                                })
                            }
                            this.branch = ''
                            this.opening_balance = 0
                            this.depreciation_amount = 0
                        },
                        removeBranchSelect(removeindex) {
                            this.selectedBranches = this.selectedBranches.filter((value, index) => index !== removeindex)
                        },
                        getPositionHeight(element) {
                            var rect = element.getBoundingClientRect();
                            return (rect.y + 100) < $(window).height()
                        },
                        handleScroll(event) {
                            // Any code to be executed when the window is scrolled
                            if (this.getPositionHeight($('#infoListTable tbody tr:last-child').get(0)) === true && this
                                .isNextDataLastEmpty === false) {
                                if (!this.isNextDataLastEmpty) {
                                    pageNo++
                                    this.isNextDataLastEmpty = true
                                    this.getAllItemData()
                                }
                            }
                        },
                        filterGroupList() {
                            if (this.groupName != "") {
                                let search = new RegExp(this.groupName, 'i');
                                this.groupFilter = this.allGroup.filter(groupInfo => search.test(groupInfo.name))
                            } else {
                                this.groupFilter = this.allGroup
                            }
                        },
                        filterSubGroupList() {
                            if (this.subgroupName != "") {
                                let search = new RegExp(this.subgroupName, 'i');
                                this.subgroupFilter = this.allSubgroup.filter(subgroupInfo => search.test(subgroupInfo.name))
                            } else {
                                this.subgroupFilter = this.allSubgroup
                            }
                        },
                        filterCategoryList() {
                            if (this.categoryName != "") {
                                let search = new RegExp(this.categoryName, 'i');
                                this.categoryFilter = this.allCategory.filter(categoryInfo => search.test(categoryInfo.name))
                            } else {
                                this.categoryFilter = this.allCategory
                            }
                        },
                        groupSearchData(data) {
                            this.groupName = data.name
                            this.group = data.id
                            this.getSubgroupInfo(data.id)
                        },
                        subgroupSearchData(data) {
                            this.subgroupName = data.name
                            this.subgroup = data.id
                            this.getCategoryInfo(data.id)
                        },
                        categorySearchData(data) {
                            this.categoryName = data.name
                            this.category = data.id
                        },
                        getBranchInfo() {
                            let requestLink = '/api/branch'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allBranch = result.response.data
                                }
                            })
                        },

                        getGroupInfo() {
                            let requestLink = '/api/accounts/chart/group'
                            let token = localStorage.getItem('token')
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    this.allGroup = result.response.data
                                    this.groupFilter = result.response.data
                                }
                            })
                        },
                        getSubgroupInfo(value) {
                            let requestLink = '/api/accounts/chart/subgroup/group-wise/' + value
                            let token = localStorage.getItem('token')
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    this.allSubgroup = result.response.data
                                    this.subgroupFilter = result.response.data
                                }
                            })
                        },
                        getCategoryInfo(value) {
                            let requestLink = '/api/accounts/chart/category/create-subcategory/' + value
                            let token = localStorage.getItem('token')
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    
                                    this.allCategory = result.response.data
                                    this.categoryFilter = result.response.data
                                }
                            })
                        },
                        getAllItemData() {
                            let requestLink = '/api/accounts/chart/subcategory/' + pageNo + '?' + this.searchQueryString
                            let token = localStorage.getItem('token')
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    if (result.response.data.length === 0) {
                                        this.isNextDataLastEmpty = true
                                    } else {
                                        console.log(result.response.data)
                                        result.response.data.map((data) => {
                                            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                                            let createDateFormat = new Date(data.create)
                                            let createDate =  ("0" + createDateFormat.getDate()).slice(-2) + '-' + months[createDateFormat.getMonth()] + '-' + createDateFormat.getUTCFullYear()
                                            let hours = createDateFormat.getHours();
                                            let minutes = createDateFormat.getMinutes();
                                            let ampm = hours >= 12 ? 'pm' : 'am';
                                            hours = hours % 12;
                                            hours = hours ? hours : 12; // the hour '0' should be '12'
                                            minutes = minutes < 10 ? '0' + minutes : minutes;
                                            let createTime = hours + ':' + minutes + ' ' + ampm;
                                            data.dateTime = createDate + ", " + createTime
                                            this.allListItem.push(data)
                                        })
                                        
                                        this.isNextDataLastEmpty = false
                                    }
                                    this.isLoading = false
                                }   
                            })
                        },
                        clear_notifications() {
                            this.errorResponse = null
                            this.successResponse = null
                        },
                        add_type_section() {
                            this.remove_type_section()
                            this.type_section = 'add'
                        },
                        search_type_section() {
                            this.remove_type_section()
                            this.type_section = 'search'
                        },
                        edit_item_section(ItemID) {
                            this.editItemID = ItemID
                            this.remove_type_section()
                            this.isDisable = true
                            this.type_section = 'edit'
                            let requestLink = '/api/accounts/chart/subcategory/data/' + ItemID
                            let token = localStorage.getItem('token')

                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    this.selectedBranches = []
                                    result.response.data.branchWiseOpening.map(branchInfo=>{
                                        this.selectedBranches.push({
                                            branch_name: branchInfo.branch.name,
                                            branch: branchInfo.branch._id,
                                            opening_balance: branchInfo.opening_balance,
                                            depreciation_amount: branchInfo.depreciation_amount,
                                        })
                                    })
                                    this.warehouse_depreciation_amount = result.response.data.warehouse_depreciation_amount
                                    this.warehouse_opening_balance = result.response.data.warehouse_opening_balance
                                    this.name = result.response.data.name
                                    this.groupName = result.response.data.group.name
                                    this.group = result.response.data.group._id
                                    this.subgroupName = result.response.data.subgroup.name
                                    this.subgroup = result.response.data.subgroup._id
                                    this.categoryName = result.response.data.category.name
                                    this.category = result.response.data.category._id
                                    this.opening_balance = result.response.data.opening_balance
                                    this.depreciation_value = result.response.data.depreciation_amount
                                    this.isActive = result.response.data.active
                                    this.account_no = result.response.data.account_no
                                    this.address = result.response.data.address
                                    this.getSubgroupInfo(this.group)
                                    this.getCategoryInfo(this.subgroup)
                                    
                                    if (this.depreciation_value <= 0) {
                                        this.depreciation_value_condition = 'false'
                                    } else {
                                        this.depreciation_value_condition = 'true'
                                    }

                                    $('html, body').animate({
                                        scrollTop: 0
                                    }, 'slow', function () { });
                                }
                                this.isDisable = false
                            })
                        },
                        remove_type_section() {
                            this.clear_notifications()
                            this.type_section = null
                            this.clear_fields()
                        },
                        clear_fields() {
                            this.name = ''
                            this.subgroup = ''
                            this.group = ''
                            this.subgroupName = ''
                            this.groupName = ''
                            this.categoryName = ''
                            this.category = ''
                            this.account_no = null
                            this.address = ''
                            this.opening_balance = null
                        },
                        addItem() {
                            if(this.allBranch.length != this.selectedBranches.length){
                                alert("all branches opening balance and depriciation value not provided");
                                return 0;
                            }
                            this.clear_notifications()
                            this.isDisable = true
                            this.isLoading = true
                            let requestLink = '/api/accounts/chart/subcategory'
                            let token = localStorage.getItem('token')

                            let itemInfo = {
                                name: this.name.toLowerCase(),
                                group: this.group,
                                subgroup: this.subgroup,
                                category: this.category,
                                branchWiseOpening: this.selectedBranches,
                                warehouse_opening_balance: this.warehouse_opening_balance,
                                warehouse_depreciation_amount: this.warehouse_depreciation_value
                            }

                            if (this.account_no != null) {
                                itemInfo.account_no = this.account_no
                            }
                            if (this.address != '') {
                                itemInfo.address = this.address
                            }
                            
                            addNewType(requestLink, itemInfo, token).then((result) => {
                                if (result.auth === false) {
                                    this.errorResponse = result.response
                                } else {
                                    // this.clear_fields()
                                    this.allListItem = []
                                    this.successResponse = result.response
                                    pageNo = 1
                                    this.getAllItemData()
                                }
                                this.isDisable = false
                                this.isLoading = false
                                this.clear_fields()
                                $('html, body').animate({
                                    scrollTop: 0
                                }, 'slow', function () {});
                            })
                        },
                        updateProjectType() {
                            if(this.allBranch.length != this.selectedBranches.length){
                                alert("all branches opening balance and depriciation value not provided");
                                return 0;
                            }
                            this.isDisable = true
                            this.isLoading = true
                            let requestLink = '/api/accounts/chart/subcategory'
                            let token = localStorage.getItem('token')
                            let itemInfo = {
                                name: this.name.toLowerCase(),
                                subcategory: this.editItemID,
                                category: this.category,
                                subgroup: this.subgroup,
                                group: this.group,
                                branchWiseOpening: this.selectedBranches,
                                warehouse_opening_balance: this.warehouse_opening_balance,
                                warehouse_depreciation_amount: this.warehouse_depreciation_value,
                                active: this.isActive
                            }

                            if (this.account_no != null) {
                                itemInfo.account_no = this.account_no
                            }
                            
                            if (this.address != '') {
                                itemInfo.address = this.address
                            }

                            let checkSubgroup = this.subgroupFilter.filter((subgroupInfo) => subgroupInfo._id == this.subgroup)
                            let checkCategory = this.categoryFilter.filter((categoryInfo) => categoryInfo._id == this.category)

                            if (checkSubgroup.length == 0) {
                                this.isLoading = false
                                this.isDisable = false
                                return alert('This subgroup does not belong to this group..')
                            }

                            if (checkCategory.length == 0) {
                                this.isLoading = false
                                this.isDisable = false
                                return alert('This category does not belong to this subgroup..')
                            }
                            updateTypeInfo(requestLink, itemInfo, token).then((result) => {
                                if (result.auth === false) {
                                    this.errorResponse = result.response
                                } else {
                                    this.allListItem = []
                                    pageNo = 1
                                    this.successResponse = result.response
                                    this.clear_fields()
                                    this.getAllItemData()
                                }
                                this.isDisable = false
                            })
                        },
                        deleteItem(ItemID) {
                            showDeleteConfirmationMessage().then((value) => {
                                if (value === true) {
                                    this.remove_type_section()
                                    this.isDisable = true
                                    this.isLoading = true
                                    let requestLink = '/api/accounts/chart/subcategory/'
                                    let token = localStorage.getItem('token')
                                    deleteType(requestLink, ItemID, token).then((result) => {
                                       
                                        this.type_section = 'delete'
                                        if (result.auth === false) {
                                            this.errorResponse = result.response
                                        } else {
                                            this.successResponse = result.response
                                        }
                                        this.allListItem = []
                                        pageNo = 1
                                        this.getAllItemData()

                                        $('html, body').animate({
                                            scrollTop: 0
                                        }, 'slow', function () { });
                                        this.isDisable = false
                                    })
                                }
                            })
                        }
                    }
                })
            </script>

            <% include ../../partials/footer %>