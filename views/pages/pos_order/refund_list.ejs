<% include ../../partials/header %>

    <% include ../../partials/nav %>

        <% include ../../partials/left-sidebar %>

            <div id="property_type_section">
                <div class="modal fade" :id="'paymentTypeChange_'+index" tabindex="-1" role="dialog"
                    v-for="(item, index) in allListItem" :key="item._id">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="title">Modify Order Payment</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <p class="text-center">Order Date:
                                            <strong>{{dateFormating(item.create)}}</strong>
                                        </p>
                                    </div>
                                    <div class="col-sm-12">
                                        <h6 class="mt-2 mb-2">Payment Type Change</h6>
                                        <div class="col-sm-12" v-for="(payment, index) in item.payment" :key="index">
                                            <div class="row mb-3">
                                                <div class="col-sm-6">
                                                    <select class="form-control">
                                                        <option value="cash">Cash</option>
                                                        <option value="card">Card</option>
                                                        <option value="mobile banking">Mobile Banking</option>
                                                    </select>
                                                </div>
                                                <div class="col-sm-6">
                                                    <strong> -
                                                        {{payment.amount}} TK</strong>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary ml-3">Save changes</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" :id="'orderDetailsModal_'+index" tabindex="-1" role="dialog"
                    v-for="(item, index) in allListItem" :key="item._id">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="title">Refund Details</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <p class="text-center">Refund Date:
                                            <strong>{{dateFormating(item.create)}}</strong>
                                        </p>
                                    </div>
                                    <div class="col-sm-6">
                                        <h6 class="mt-2 mb-2">Refund ID: {{item.serialNo}}</h6>
                                        <h6 class="mt-2 mb-2" v-if="item.posOrder!=null">Refund From: {{item.posOrder.orderID}} (Order)</h6>
                                        <h6 class="mt-2 mb-2" v-else>Refund From: {{item.posExchange.serialNo}} (Exchange)</h6>
                                    </div>
                                    <div class="col-sm-6">
                                        <h6 class="mt-2 mb-2">Refunded</h6>
                                        <ul>
                                            <li>
                                                <strong>CASH</strong>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="col-md-12">
                                        <h6 class="mt-2 mb-2">Product Details</h6>
                                        <div class="table-responsive">
                                            <table
                                                class="table td_2 table-striped table-hover js-basic-example dataTable text-center"
                                                id="infoListTable">
                                                <thead>
                                                    <tr>
                                                        <th>Barcode</th>
                                                        <th>Name</th>
                                                        <th>Price</th>
                                                        <th>Qty</th>
                                                        <th>Total</th>
                                                    </tr>
                                                </thead>
                                                <tbody v-if="item.products.length > 0 ">
                                                    <tr v-for="(product, index) in item.products" key="index">
                                                        <td>{{product.code}}</td>
                                                        <td>{{product.name}}</td>
                                                        <td>
                                                            {{product.price}}</td>
                                                        <td>
                                                            {{product.quantity}}
                                                        </td>
                                                        <td :id="'total_price_'+product._id">
                                                            {{(product.price*product.quantity).toFixed(2)}}
                                                        </td>
                                                    </tr>
                                                </tbody>
                                                <tbody v-else>
                                                    <tr>
                                                        <td class="text-center" colspan="6">No data found here</td>
                                                    </tr>
                                                </tbody>
                                                <tfoot v-if="item.products.length > 0">
                                                    <tr>
                                                        <th class="text-right" colspan="4">Sub Total :
                                                        </th>
                                                        <th class="text-right">{{item.sub_total_bill}} TK.</th>
                                                    </tr>
                                                    <tr>
                                                        <th class="text-right" colspan="4">VAT : </th>
                                                        <th class="text-right">{{item.vat}} TK.</th>
                                                    </tr>
                                                    <tr>
                                                        <th class="text-right" colspan="4">Order Total : </th>
                                                        <th class="text-right">{{item.sub_total_bill + item.vat}} TK.
                                                        </th>
                                                    </tr>
                                                    <tr>
                                                        <th class="text-right" colspan="4">-Discount : </th>
                                                        <th class="text-right">
                                                            {{(item.discount.product +
                                                            item.discount.others).toFixed(2)}} TK.
                                                        </th>
                                                    </tr>
                                                    <tr>
                                                        <th class="text-right" colspan="4">Due Amount (Refunded) : </th>
                                                        <th class="text-right">
                                                            {{(item.total_bill).toFixed(2)}}
                                                            TK.</th>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                        <div class="text-center" v-if="item.nbrDeviceInfo.isWritten">
                                            SDC Return Invoice No: <b>{{item.nbrDeviceInfo.invoiceNo}}</b><br/>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <hr />
                                        <label class="checkbox">
                                            <input type="checkbox" id="useDefaultPrinter" /> <strong>Print to Default
                                                printer</strong>
                                        </label>
                                        <p>or...</p>
                                        <div id="installedPrinters">
                                            <label for="installedPrinterName">Select an installed Printer:</label>
                                            <select name="installedPrinterName" id="installedPrinterName"></select>
                                        </div>
                                        <br /><br />
                                        <button type="submit" @click="printSlip(item)" class="btn btn-primary btn-round">Print Slip</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Main Content -->
                <section class="content">

                    <% include ../../partials/content/header %>

                        <div class="container-fluid">
                            <div class="row clearfix">
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="body" v-on:scroll="handleScroll">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <p class="text-center text-primary">Your current branch is :
                                                        <strong>{{branch.name}}</strong>
                                                    </p>
                                                    <button @click="changeBranch"
                                                        class="btn btn-primary float-right">Change
                                                        Branch</button>
                                                </div>
                                            </div>
                                            <div class="row justify-content-center clearfix">
                                                <div class="col-lg-5">
                                                    <div v-if="type_section === 'delete'">
                                                        <div v-if="errorResponse!==null">
                                                            <div class="alert alert-danger"
                                                                v-for="error in errorResponse">
                                                                {{error.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div v-if="successResponse!==null">
                                                            <div class="alert alert-success">
                                                                {{successResponse.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div
                                                    class="col-5 col-md-4 col-lg-3 col-xl-2 offset-md-1 offset-lg-2 offset-xl-3">
                                                    <div class="form-group">
                                                        <select class="form-control" v-model="searchType">
                                                            <option value="serialNo">Refund No</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-7 col-md-6 col-lg-5 col-xl-4">
                                                    <div class="form-group">
                                                        <input type="text" @keyup="searchData($event)"
                                                            class="form-control" v-model="searchText"
                                                            placeholder="Search Keyword">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" v-if="isLoading">
                                                <div class="spinner-border text-primary mt-4" style="margin: 0 auto"
                                                    role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                            <div class="table-responsive" v-else>
                                                <table
                                                    class="table td_2 table-striped table-hover js-basic-example dataTable"
                                                    id="infoListTable">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Serial No</th>
                                                            <th>Date</th>
                                                            <th>Billing Amount</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody v-if="allListItem.length > 0">
                                                        <tr v-for="(item, index) in allListItem" :key="item._id">
                                                            <td>{{ index + 1 }}</td>
                                                            <td style="text-transform: capitalize;">
                                                                {{item.serialNo}}
                                                            </td>
                                                            <td style="text-transform: capitalize;">
                                                                {{getActualDateTime(item.create)}}
                                                            </td>
                                                            <td style="text-transform: capitalize;">{{item.total_bill.toFixed(2)}}
                                                                TK</td>
                                                            <td>
                                                                <button :disabled="isDisable" class="btn btn-primary"
                                                                    data-toggle="modal"
                                                                    :data-target="'#orderDetailsModal_'+index"
                                                                    data-backdrop="static" data-keyboard="false"
                                                                    title="Order view"
                                                                    style="padding: 3px 5px;" v-show="adminAccess.length>0?adminAccess.includes('pos refund list view'):false">view</button>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                    <tbody v-else>
                                                        <tr>
                                                            <td class="text-center" colspan="9">No data found here</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                </section>
            </div>

            <script>
                //WebSocket settings
                JSPM.JSPrintManager.auto_reconnect = true;
                JSPM.JSPrintManager.start();
                JSPM.JSPrintManager.WS.onStatusChanged = function () {
                    if (jspmWSStatus()) {
                        //get client installed printers
                        JSPM.JSPrintManager.getPrinters().then(function (myPrinters) {
                            var options = '';
                            for (var i = 0; i < myPrinters.length; i++) {
                                options += '<option>' + myPrinters[i] + '</option>';
                            }
                            $('#installedPrinterName').html(options);
                        });
                    }
                };

                //Check JSPM WebSocket status
                function jspmWSStatus() {
                    if (JSPM.JSPrintManager.websocket_status == JSPM.WSStatus.Open)
                        return true;
                    else if (JSPM.JSPrintManager.websocket_status == JSPM.WSStatus.Closed) {
                        alert(
                            'JSPrintManager (JSPM) is not installed or not running! Download JSPM Client App from https://neodynamic.com/downloads/jspm'
                        );
                        return false;
                    } else if (JSPM.JSPrintManager.websocket_status == JSPM.WSStatus.Blocked) {
                        alert('JSPM has blocked this website!');
                        return false;
                    }
                }
            </script>

            <script>
                var pageNo = 1
                var searchTypeParam = "<%= data.orderProcess!=null? 'order_status':'serialNo' %>"

                var searchData = "<%= data.orderProcess!=null? data.orderProcess:'' %>"

                window.history.pushState("", "", '/dashboard/pos/order/refunds/list');

                new Vue({
                    el: '#property_type_section',
                    data: {
                        allListItem: [],
                        searchType: searchTypeParam,
                        searchText: searchData,
                        type_section: null,
                        errorResponse: null,
                        successResponse: null,
                        isDisable: false,
                        isLoading: true,
                        isNextDataLastEmpty: false,
                        searchQueryString: '',
                        branch: '',
                        adminInfo: null,
                        clientData: null,
                        adminAccess: []
                    },
                    mounted() {
                        this.adminAccess = '<%= data.adminInfo.admin_roles %>'.split(',')
                        authChecker(localStorage.getItem('token')).then((result) => {
                            this.adminInfo = result.response.data
                        })
                        this.checkBranchInfo()

                        if (this.searchText == 'pending') {
                            pageNo = 1
                            this.allListItem = []
                            if (this.searchText == '') {
                                this.searchQueryString = ''
                            } else {
                                this.searchQueryString = 'type=' + this.searchType + '&&text=' + this.searchText
                            }
                        }

                        this.getAllItemData()
                    },
                    created() {
                        window.addEventListener('scroll', this.handleScroll);
                    },
                    destroyed() {
                        window.removeEventListener('scroll', this.handleScroll);
                    },
                    methods: {
                        dateFormating(dateTime) {
                            var today = new Date();
                            var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
                            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
                            var dateTime = date + ' ' + time;
                            return dateTime
                        },
                        changeBranch() {
                            localStorage.removeItem('branch')
                            localStorage.setItem('referrerURL', window.location.href)
                            location.href = '<%= host %>' + '/product/branch/select'
                        },
                        checkBranchInfo() {
                            if (localStorage.getItem('branch')) {
                                let branchID = localStorage.getItem('branch')

                                let requestLink = '/api/branch/data/' + branchID
                                getType(requestLink).then((result) => {
                                    if (result.auth === true) {
                                        this.branch = {
                                            id: result.response.data._id,
                                            name: result.response.data.name,
                                            address: result.response.data.address,
                                            phone: result.response.data.phone,
                                            taxIdentificationNo: result.response.data.taxIdentificationNo,
                                            thana: result.response.data.thana.name,
                                            district: result.response.data.district.name,
                                        }
                                    } else {
                                        localStorage.removeItem('branch')
                                        localStorage.setItem('referrerURL', window.location.href)
                                        location.href = '<%= host %>' + '/product/branch/select'
                                    }
                                })
                            } else {
                                localStorage.removeItem('branch')
                                localStorage.setItem('referrerURL', window.location.href)
                                location.href = '<%= host %>' + '/product/branch/select'
                            }
                        },
                        searchData(e) {
                            if (e.keyCode === 13) {
                                pageNo = 1
                                this.allListItem = []
                                if (this.searchText == '') {
                                    this.searchQueryString = ''
                                } else {
                                    this.searchQueryString = 'type=' + this.searchType + '&&text=' + this.searchText
                                }
                                this.getAllItemData()
                            }
                        },
                        getPositionHeight(element) {
                            var rect = element.getBoundingClientRect();
                            return (rect.y + 100) < $(window).height()
                        },
                        handleScroll(event) {
                            // Any code to be executed when the window is scrolled
                            if (this.getPositionHeight($('#infoListTable tbody tr:last-child').get(0)) === true && this
                                .isNextDataLastEmpty === false) {
                                if (!this.isNextDataLastEmpty) {
                                    pageNo++
                                    this.isNextDataLastEmpty = true
                                    this.getAllItemData()
                                }
                            }
                        },
                        getAllItemData() {
                            let token = localStorage.getItem('token')
                            let requestLink = '/api/pos/order/refunds/list/' + pageNo + '?' + this.searchQueryString + '&branch=' +
                                localStorage.getItem('branch')
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    if (result.response.data.length === 0) {
                                        this.isNextDataLastEmpty = true
                                    } else {
                                        result.response.data.map((data) => {
                                            this.allListItem.push(data)
                                        })
                                        this.isNextDataLastEmpty = false
                                    }
                                    this.isLoading = false
                                }
                            })
                        },
                        clear_notifications() {
                            this.errorResponse = null
                            this.successResponse = null
                        },
                        add_type_section() {
                            this.remove_type_section()
                            this.type_section = 'add'
                        },
                        remove_type_section() {
                            this.clear_notifications()
                            this.type_section = null
                            this.clear_fields()
                        },
                        clear_fields() {
                            this.selectedBranches = []
                            this.selectedCategories = []
                            this.selectedSubcategories = []
                            this.selectedBrands = []
                            this.name = ''
                            this.phone = []
                            this.phoneNumber = ''
                            this.address = ''
                            this.branch = ''
                            this.category = ''
                            this.subcategory = ''
                            this.brand = ''
                            this.instantPayment = false
                        },
                        deleteItem(ItemID) {
                            showDeleteConfirmationMessage().then((value) => {
                                if (value === true) {
                                    this.remove_type_section()
                                    this.isDisable = true
                                    this.isLoading = true
                                    let requestLink = '/api/order/'
                                    let token = localStorage.getItem('token')
                                    deleteType(requestLink, ItemID, token).then((result) => {
                                        this.type_section = 'delete'
                                        if (result.auth === false) {
                                            this.errorResponse = result.response
                                        } else {
                                            this.allListItem = []
                                            pageNo = 1
                                            this.getAllItemData()
                                            this.successResponse = result.response
                                            $('html, body').animate({
                                                scrollTop: 0
                                            }, 'slow', function () { });
                                        }
                                        this.isDisable = false
                                    })
                                }
                            })
                        },
                        addZero(num) {
                            return (num >= 0 && num < 10) ? "0" + num : num + "";
                        },
                        clearResponseMessage() {
                            this.errorResponse = null
                            this.successResponse = null
                        },
                        getActualDateTime(receiveDate) {
                            let receivedDate = new Date(receiveDate)
                            return receivedDate.getFullYear() + '-' + (receivedDate.getMonth() + 1) + '-' + receivedDate.getDate() + ' ' + receivedDate.getHours() + ":" + receivedDate.getMinutes() + ":" + receivedDate.getSeconds()
                        },
                        printSlip(item) {
                            this.clearResponseMessage()
                            let dueAmount = Number((item.sub_total_bill + item.vat).toFixed(2)) - Number((item.discount.others +
                                item.discount.product).toFixed(2));

                            var now = new Date();
                            var strDateTime = [
                                [this.addZero(now.getDate()),
                                this.addZero(now.getMonth() + 1),
                                now.getFullYear()
                                ].join("/"),
                                [this.addZero(now.getHours()),
                                this.addZero(now.getMinutes())
                                ].join(":"),
                                now.getHours() >= 12 ? "PM" : "AM"
                            ].join(" ");
                            if (jspmWSStatus()) {
                                //Create a ClientPrintJob
                                var cpj = new JSPM.ClientPrintJob();
                                //Set Printer type (Refer to the help, there many of them!)
                                if ($('#useDefaultPrinter').prop('checked')) {
                                    cpj.clientPrinter = new JSPM.DefaultPrinter();
                                } else {
                                    cpj.clientPrinter = new JSPM.InstalledPrinter($('#installedPrinterName')
                                        .val());
                                }
                                //Create ESP/POS commands for sample label
                                var esc = '\x1B'; //ESC byte in hex notation
                                var newLine = '\x0A'; //LF byte in hex notation

                                var cmds = esc + "@"; //Initializes the printer (ESC @)
                                cmds += esc + '!' +
                                '\x22'; //Emphasized + Double-height + Double-width mode selected (ESC ! (8 + 16 + 32)) 56 dec => 38 hex
                                cmds += newLine;
                                cmds += '\x1B' + '\x61' + '\x31';
                                cmds += '<%= companyInfo.full_name.toUpperCase() %>'; //text to print
                                cmds += newLine;
                                cmds += esc + '!' + '\x00'; //Character font A selected (ESC ! 0)
                                cmds += '\x1B' + '\x61' + '\x31';
                                cmds += this.branch.name;
                                cmds += newLine;
                                cmds += '------------- reprinted slip -------------';
                                cmds += '\x0A'; //LF byte in hex notation
                                cmds += '\x1B'+'@';
                                cmds += 'Location: ' + this.branch.address + ', ' + this.branch.thana +
                                ', ' + this.branch
                                .district + '.';
                                cmds += newLine;
                                cmds += 'Contact no. ' + this.branch.phone;
                                cmds += newLine;
                                cmds += 'VAT Identification no. ' + this.branch.taxIdentificationNo;
                                cmds += newLine;
                                cmds += 'POS operator name: ' + this.adminInfo.name;
                                cmds += newLine;
                                cmds += 'Date: ' + strDateTime;
                                cmds += newLine;
                                cmds += 'Refund Invoice no. ' + item.serialNo;
                                cmds += newLine;
                                cmds += 'From Invoice no. ' + ((item.posOrder == null) ? (item.posExchange.serialNo + ' (exchange)') : (item.posOrder.orderID + ' (order)'));
                                cmds += newLine;
                                cmds += 'Slip type: Refund';
                                cmds += newLine;
                                cmds += '------------------------------------------';
                                cmds += newLine;
                                cmds += esc + '!' + '\x00'; //Character font A selected (ESC ! 0)
                                cmds += '#Item      #Qty      #Price      #Subtotal';
                                item.products.map(product => {
                                    cmds += newLine;
                                    cmds += '------------------------------------------';
                                    cmds += newLine;
                                    cmds += esc + '!' +
                                        '\x00'; //Character font A selected (ESC ! 0)
                                    cmds += product.name;
                                    cmds += newLine;
                                    cmds += esc + '!' +
                                        '\x00'; //Character font A selected (ESC ! 0)
                                    cmds += '            ' + product.quantity + '    x   ' + product
                                        .price +
                                        '          ' + (product.price *
                                        product.quantity).toFixed(2);
                                })
                                cmds += newLine;
                                cmds += '------------------------------------------';

                                cmds += newLine;
                                cmds += 'Subtotal Without VAT:             ' + item.sub_total_bill.toFixed(2);
                                cmds += newLine;
                                cmds += '++VAT(App. items only up to 7.5%):' + item.vat.toFixed(2);
                                cmds += newLine;
                                cmds += '                                ----------';
                                cmds += newLine;
                                cmds += '                 Total Amount:    ' + (item.sub_total_bill + item.vat);
                                cmds += newLine;
                                cmds += '                    -Discount:    ' + (parseFloat(item.discount.others) +
                                    parseFloat(item.discount.product))
                                    .toFixed(2);
                                cmds += newLine;
                                cmds += '                                ----------';
                                cmds += newLine;
                                cmds += '              Refunded Amount :    ' + dueAmount.toFixed(2);
                                cmds += newLine;

                                if (this.clientData !== null) {
                                    cmds += '------------------------------------------';
                                    cmds += newLine;
                                    cmds += 'Bonus Point Adjust: ' + this.earned_point;
                                    cmds += newLine;
                                    cmds += 'Total Bonus Point   : ' + (this.clientData.points - this.earned_point).toFixed(2);
                                    cmds += newLine;
                                }
                                cmds += newLine + newLine;
                                //cmds += esc + '!' +'\x18'; //Emphasized + Double-height mode selected (ESC ! (16 + 8)) 24 dec => 18 hex
                                //cmds += '# ITEMS SOLD 2';
                                cmds += newLine + newLine;
                                cmds += newLine + newLine;
                                cmds += newLine + newLine;
                                cmds += esc + '!' + '\x00'; //Character font A selected (ESC ! 0)
                                cmds += "\x1b" + "\x69";
                                cmds += '\x10' + '\x14' + '\x01' + '\x00' + '\x05';

                                cpj.printerCommands = cmds;
                                //Send print job to printer!
                                cpj.sendToClient();
                            }
                        }
                    }
                })
            </script>

            <% include ../../partials/footer %>