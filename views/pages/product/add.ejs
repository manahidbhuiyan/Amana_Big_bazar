<% include ../../partials/header %>

<% include ../../partials/nav %>

<% include ../../partials/left-sidebar %>

<style>
    body {
        padding-right: 0px !important;
    }

    .dtp .p10 > a {
    color: white;
    text-decoration: none;
}
.dtp > .dtp-content > .dtp-date-view > header.dtp-header {
    background: #7e6990;
    color: #fff;
    text-align: center;
    padding: 0.3em;
}
.dtp div.dtp-date, .dtp div.dtp-time {
    background: #7e6990;
    text-align: center;
    color: #fff;
    padding: 10px;
}
.dtp table.dtp-picker-days tr > td > a.selected {
    background: #7e6990;
    color: #fff;
}

</style>

<!-- Main Content -->
<section class="content">

    <% include ../../partials/content/header %>

    <div class="container-fluid" id="add_data_section">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="header">
                        <h2><strong>Create</strong> Product Information</h2>
                        <div class="row">
                            <div class="col-sm-12 text-center">
                                <p class="text-center text-primary">Your current branch is :
                                    <strong>{{branch.name}}</strong></p>
                                <button @click="changeBranch" class="btn btn-primary">Change Branch</button>
                            </div>
                        </div>
                        <button v-if="!formDisplay" @click="propcessCompleted" type="button"
                            class="btn btn-primary float-right">Complete</button>
                        <br />
                    </div>
                    <div class="body">
                        <div class="row">
                            <div class="col-lg-6 offset-lg-3">
                                <% include ../notification/message %>
                            </div>
                        </div>

                        <form @submit.prevent="addItem" v-if="formDisplay">
                            <div class="row mb-3">
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Category</h6>
                                    <div class="form-group">
                                        <select class="form-control" @change="getSubcategoryInfo(category)"
                                            v-model="category" required>
                                            <option value="">-- Select Category --</option>
                                            <option :value="{id: category._id, name: category.name, vat: category.vat}"
                                                v-for="(category, index) in allCategory" :key="index"
                                                class="text-capitalize">{{category.name}}</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Subcategory</h6>
                                    <div class="form-group">
                                        <select class="form-control" @change="selectSubCategory(subcategory)"
                                            v-model="subcategory" required>
                                            <option value="">-- Select Subcategory --</option>
                                            <option
                                                :value="{id: subcategory._id, name: subcategory.name, isSizeAvailable: subcategory.isSizeAvailable, isWeightAvailable: subcategory.isWeightAvailable}"
                                                v-for="(subcategory, index) in allSubcategory" :key="index"
                                                class="text-capitalize">{{subcategory.name}}</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="col-sm-6" v-if="isSizeVisible">
                                    <h6 class="mt-2 mb-2">Size</h6>
                                    <div class="form-group">
                                        <select class="form-control" @change="getSizeTypesSelect($event, size)"
                                            v-model="size">
                                            <option value="">-- Select Size --</option>
                                            <option :value="{id: size._id, name: size.name, shortform: size.shortform}"
                                                v-for="(size, index) in allSize" :key="index" class="text-capitalize">
                                                {{size.name}} ({{size.shortform}})</option>
                                        </select>
                                    </div>
                                    <span class="badge badge-primary text-capitalize mr-2"
                                        style="font-size: 12px; cursor: pointer;"
                                        v-for="(selectedSize, index) in selectedSize" :key="index">{{selectedSize.name}}
                                        <span @click="removeSizeTypesSelect(index)"
                                            aria-hidden="true">&times;</span></span>
                                </div>

                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Weight Unit</h6>
                                    <div class="form-group">
                                        <select class="form-control" v-model="weightUnit">
                                            <option value="">-- Select Weight --</option>
                                            <option
                                                :value="{id: weight._id, name: weight.name, shortform: weight.shortform}"
                                                v-for="(weight, index) in allWeightUnit" :key="index"
                                                class="text-capitalize">{{weight.name}} ({{weight.shortform}})</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Weight</h6>
                                    <div class="form-group">

                                        <input type="number" min="0" v-model="weight" class="form-control"
                                            placeholder="Enter Weight">
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Brand</h6>
                                    <div class="form-group">
                                        <select class="form-control" @change="getSupplierInfo(brand)" v-model="brand" required>
                                            <option value="">-- Select Brand --</option>
                                            <option :value="{id: brand._id, name: brand.name}"
                                                v-for="(brand, index) in allBrand" :key="index" class="text-capitalize">
                                                {{brand.name}}</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Supplier</h6>
                                    <div class="form-group">
                                        <select class="form-control" v-model="supplier" required>
                                            <option value="">-- Select Supplier --</option>
                                            <option :value="{id: supplier._id, name: supplier.name}"
                                                v-for="(supplier, index) in allSupplier" :key="index"
                                                class="text-capitalize">{{supplier.name}}</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3 clearfix">
                                <div class="col-sm-4 col-md-3">
                                    <h6>Online Active</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="online_active" id="online_active_yes" v-model="online_active"
                                                class="with-gap" value="true">
                                            <label for="online_active_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="online_active" id="online_active_no" v-model="online_active"
                                                class="with-gap" value="false">
                                            <label for="online_active_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4 col-md-3">
                                    <h6>POS Active</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="pos_active" id="pos_active_yes" v-model="pos_active"
                                                class="with-gap" value="true">
                                            <label for="pos_active_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="pos_active" id="pos_active_no" v-model="pos_active"
                                                class="with-gap" value="false">
                                            <label for="pos_active_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4 col-md-3">
                                    <h6>New Product</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="new_product" id="new_product_yes"
                                                v-model="new_product" class="with-gap" value="true">
                                            <label for="new_product_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="new_product" id="new_product_no"
                                                v-model="new_product" class="with-gap" value="false">
                                            <label for="new_product_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4 col-md-3">
                                    <h6>Special Offer</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="special_offer" id="special_offer_yes"
                                                v-model="special_offer" class="with-gap" value="true">
                                            <label for="special_offer_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="special_offer" id="special_offer_no"
                                                v-model="special_offer" class="with-gap" value="false">
                                            <label for="special_offer_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4 col-md-3">
                                    <h6>Best Sell</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="best_sell" id="best_sell_yes" v-model="best_sell"
                                                class="with-gap" value="true">
                                            <label for="best_sell_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="best_sell" id="best_sell_no" v-model="best_sell"
                                                class="with-gap" value="false">
                                            <label for="best_sell_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4 col-md-3">
                                    <h6>Personal Discount</h6>
                                    <div class="form-group">
                                        <div class="radio inlineblock m-r-20">
                                            <input type="radio" name="personalDiscountAvailable" id="personal_discount_yes" v-model="personalDiscountAvailable"
                                                class="with-gap" value="true">
                                            <label for="personal_discount_yes">Yes</label>
                                        </div>
                                        <div class="radio inlineblock">
                                            <input type="radio" name="personalDiscountAvailable" id="personal_discount_no" v-model="personalDiscountAvailable"
                                                class="with-gap" value="false">
                                            <label for="personal_discount_no">No</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-12">
                                    <h6>Product Thumbnail</h6>
                                    <div class="col-sm-12" v-if="thumbnailImageUrl !== ''">
                                        <img style="width: 250px;" :src="thumbnailImageUrl" alt="">
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <input type="file" @change="uploadThumbnailImage" class="form-control-file"
                                                id="thumbnail_photo" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-3 clearfix" v-show="showBarcode">
                                <div class="col-sm-12">
                                    <h6 class="mt-2 mb-2">Product Barcode</h6>
                                </div>
                                <div class="col-md-12">
                                    <canvas id="productBarcode"></canvas>
                                </div>
                            </div>
                            <div class="row mb-3 clearfix">
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Product Name</h6>
                                    <div class="form-group">
                                        <input type="text" v-model="name" class="form-control"
                                            placeholder="Product Name">
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Barcode</h6>
                                    <div class="form-group">
                                        <input type="text" v-model="barcode" @change="changeBorcode"
                                            class="form-control" placeholder="Barcode">
                                    </div>
                                    <div class="form-group">
                                        <input type="checkbox" id="autoGeneratedBarcode" @change="generateBarcode"
                                            v-model="autoGenerateBarcode">
                                        <label for="autoGeneratedBarcode">Auto
                                            generated barcode</label>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Reorder Level</h6>
                                    <div class="form-group">
                                        <input type="text" v-model="reorderLevel" class="form-control"
                                            placeholder="Reorder Level">
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Selling price</h6>
                                    <div class="form-group">
                                        <input type="text" v-model="selling" class="form-control"
                                            placeholder="Selling price" >
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Purchase price</h6>
                                    <div class="form-group">
                                        <input type="text" v-model="purchasing" class="form-control"
                                            placeholder="Purchase price">
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Vat Percentage</h6>
                                    <div class="form-group">
                                        <input type="number" min="0" step="any" v-model="vat" class="form-control"
                                            placeholder="Vat Percentage">
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <h6 class="mt-2 mb-2">Expire Date</h6>
                                    <div class="form-group">
                                        <input type="text" id="expireDate" class="form-control datetimepicker"
                                            placeholder="Expire Date">
                                    </div>
                                </div>

                                <div class="col-sm-12">
                                    <h6 class="mt-2 mb-2">Product Description</h6>
                                    <div class="form-group">
                                        <div class="form-line">
                                            <textarea rows="4" class="form-control no-resize" v-model="description"
                                                placeholder="Product Description"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row clearfix">
                                <div class="col-sm-12">
                                    <button type="submit" :disabled="isDisable"
                                        class="btn btn-primary btn-round">Save</button>
                                    <button @click="clear_fields" type="button"
                                        class="btn btn-default btn-round btn-simple">Reset</button>
                                </div>
                            </div>
                        </form>

                        <div class="row" v-else>
                            <div class="col-lg-6 offset-lg-3">
                                <h6 class="mt-2 mb-2">Upload files for this property partition</h6>
                                <div class="upload_fields">
                                    <div class="custom-file">
                                        <input type="file" @change="uploadFile" :disabled="isLoading" id="uploadedFile"
                                            class="custom-file-input" />
                                        <label class="custom-file-label" for="customFile">Upload property partition
                                            photos</label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="row">
                                    <template v-if="uploadedImages && uploadedImages.length > 0">
                                        <div class="spinner-border text-primary mt-4" v-if="isLoading"
                                            style="margin: 0 auto" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                        <template v-else>
                                            <div class="col-lg-3 col-md-6 mt-4 position-relative"
                                                v-for="(uploadedImage, index) in uploadedImages">
                                                <img style="height: 210px;width: 100%;" class="img-thumbnail img-fluid"
                                                    :src="uploadedImage" alt="img">
                                                <button @click="removeFile(index)"
                                                    class="btn btn-icon btn-neutral btn-icon-mini position-absolute delete-button-position"><i
                                                        class="zmdi zmdi-delete"></i></button>
                                            </div>
                                        </template>
                                    </template>
                                    <template v-else>
                                        <div class="spinner-border text-primary mt-4" v-if="isLoading"
                                            style="margin: 0 auto" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                        <div class="col-lg-12 clearfix" v-else>
                                            <p class="text-center mt-5">No image uploaded for this property</p>
                                        </div>
                                    </template>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bwip-js/2.0.10/bwip-js-min.js"
    integrity="sha512-5uGnKj8h56cEozQZHq09metdJx1V6UM8qs7M+bG7EJMKYAKBl+CWo1SdmqU9RZTTlzIIa4xTCR5LWBY3spP9zw=="
    crossorigin="anonymous"></script>

<script>
    new Vue({
        el: '#add_data_section',
        data: {
            productID: null,
            allSupplier: [],
            allBrand: [],
            allSubcategory: [],
            allCategory: [],
            allBranch: [],
            allWeightUnit: [],
            allSize: [],
            selectedSize: [],
            name: '',
            barcode: '',
            autoGenerateBarcode: false,
            description: '',
            supplier: '',
            uploadedImages: [],
            reorderLevel: '',
            online_active: false,
            pos_active: true,
            weight: null,
            size: '',
            weightUnit: '',
            vat: null,
            sellingType: 'kg',
            branch: '',
            category: '',
            subcategory: '',
            brand: '',
            selling: '',
            purchasing: '',
            vat: null,
            new_product: false,
            special_offer: false,
            best_sell: false,
            errorResponse: null,
            successResponse: null,
            isDisable: false,
            isLoading: false,
            formDisplay: true,
            isNextDataLastEmpty: false,
            searchQueryString: '',
            isSizeVisible: false,
            isWeightVisible: false,
            thumbnailImageUrl: '',
            showBarcode: false,
            personalDiscountAvailable: true,
            adminAccess: []
        },
        mounted() {
            this.adminAccess = '<%= data.adminInfo.admin_roles %>'.split(',')
            this.checkBranchInfo()
            this.getBranchInfo()
            this.getCategoryInfo()
            this.getAllWeightUnit()
            this.getAllSize()
        },
        methods: {
            generateBarcode() {
                if (this.autoGenerateBarcode == true) {
                    let generatedBarcode = Date.now() + (Math.floor(Math
                        .random() * (99 - 10 + 1)) + 10)
                    this.barcode = generatedBarcode

                    this.changeBorcode()
                } else {
                    this.barcode = ''
                }
            },
            changeBranch() {
                localStorage.removeItem('branch')
                localStorage.setItem('referrerURL', window.location.href)
                location.href = '<%= host %>' + '/product/branch/select'
            },
            changeBorcode() {
                try {
                    // The return value is the canvas element
                    let canvas = bwipjs.toCanvas('productBarcode', {
                        bcid: 'code128', // Barcode type
                        text: this.barcode.toString(), // Text to encode
                        scale: 3, // 3x scaling factor
                        height: 10, // Bar height, in millimeters
                        includetext: true, // Show human-readable text
                        textxalign: 'center', // Always good to set this
                    });
                    this.showBarcode = true
                } catch (e) {
                    // `e` may be a string or Error object
                }
            },
            uploadThumbnailImage() {
                let file = document.getElementById("thumbnail_photo").files[0]
                this.thumbnailImageUrl = URL.createObjectURL(file)
            },
            checkBranchInfo() {
                if (localStorage.getItem('branch')) {
                    let branchID = localStorage.getItem('branch')

                    let requestLink = '/api/branch/data/' + branchID
                    getType(requestLink).then((result) => {
                        if (result.auth === true) {
                            this.branch = {
                                id: result.response.data._id,
                                name: result.response.data.name
                            }
                        } else {
                            localStorage.removeItem('branch')
                            localStorage.setItem('referrerURL', window.location.href)
                            location.href = '<%= host %>' + '/product/branch/select'
                        }
                    })
                } else {
                    localStorage.removeItem('branch')
                    localStorage.setItem('referrerURL', window.location.href)
                    location.href = '<%= host %>' + '/product/branch/select'
                }
            },
            getSizeTypesSelect(e, productSizeType) {
                let productSizeTypeData = productSizeType
                if (productSizeTypeData !== '') {
                    if (this.selectedSize.filter((selectedSize => selectedSize.id === productSizeTypeData.id))
                        .length == 0) {
                        this.selectedSize.push(productSizeTypeData)
                    }
                    this.size = ''
                }
            },
            removeSizeTypesSelect(removeindex) {
                this.selectedSize = this.selectedSize.filter((value, index) => index !== removeindex)
            },
            selectSubCategory(value) {
                this.clear_subcategoryinfo()
                if (value.isSizeAvailable == true) {
                    this.isSizeVisible = true
                } else {
                    this.isSizeVisible = false
                }

                if (value.isWeightAvailable == true) {
                    this.isWeightVisible = true
                } else {
                    this.isWeightVisible = false
                }

                this.getBrandInfo(value)
            },
            getPositionHeight(element) {
                var rect = element.getBoundingClientRect();
                return (rect.y + 100) < $(window).height()
            },
            getAllSize() {
                let requestLink = '/api/product/size'
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allSize = result.response.data
                    }
                })
            },
            getAllWeightUnit() {
                let requestLink = '/api/product/weight'
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allWeightUnit = result.response.data
                    }
                })
            },
            getBranchInfo() {
                let requestLink = '/api/branch'
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allBranch = result.response.data
                    }
                })
            },
            getCategoryInfo() {
                let branchID = '?branch='+localStorage.getItem('branch')
                let requestLink = '/api/category'+branchID
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allCategory = result.response.data
                    }
                })
            },
            getSubcategoryInfo(value) {
                let branchID = '?branch='+localStorage.getItem('branch')
                this.vat = value.vat;
                let requestLink = '/api/subcategory/category/' + value.id + branchID
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allSubcategory = result.response.data
                        this.subcategory = ''
                    }
                })
            },
            getBrandInfo(value) {
                let branchID = '?branch='+localStorage.getItem('branch')
                let requestLink = '/api/brand/subcategory/' + value.id + branchID
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allBrand = result.response.data
                        this.brand = ''
                    }
                })
            },
            getSupplierInfo(value) {
                let branchID = '?branch='+localStorage.getItem('branch')
                let requestLink = '/api/supplier/brand/' + value.id + branchID
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allSupplier = result.response.data
                        this.supplier = ''
                    }
                })
            },
            clear_notifications() {
                this.errorResponse = null
                this.successResponse = null
            },
            remove_type_section() {
                this.clear_notifications()
                this.type_section = null
                this.clear_fields()
            },
            clear_fields() {
                this.name = ''
                this.barcode = ''
                this.description = ''
                this.supplier = ''
                this.reorderLevel = ''
                this.weight = ''
                $("#expireDate").val("")
                this.vat = null
                this.branch = ''
                this.category = ''
                this.selling = ''
                this.purchasing = ''
                this.vat = ''
                this.subcategory = ''
                this.brand = ''
                this.personalDiscountAvailable = true
                this.clear_subcategoryinfo()
            },
            clear_subcategoryinfo() {
                this.selectedSize = []
                this.weightUnit = ''
            },
            addItem() {
                this.clear_notifications()
                this.isDisable = true
                this.isLoading = true
                let requestLink = '/api/product'
                let token = localStorage.getItem('token')

                let itemInfo = {
                    name: this.name,
                    barcode: this.barcode,
                    description: this.description,
                    supplier: this.supplier.id,
                    expireDate: $("#expireDate").val(),
                    reorderLevel: this.reorderLevel,
                    weight: this.weight,
                    sellingType: this.sellingType,
                    branch: this.branch.id,
                    category: this.category.id,
                    subcategory: this.subcategory.id,
                    brand: this.brand.id,
                    selling: this.selling,
                    purchase: this.purchasing,
                    vat: this.vat,
                    newProduct: this.new_product == 'true' ? true : false,
                    specialOffer: this.special_offer == 'true' ? true : false,
                    bestSell: this.best_sell == 'true' ? true : false,
                    online_active: this.online_active,
                    pos_active: this.pos_active,
                    personalDiscountAvailable: this.personalDiscountAvailable == 'true' ? true : false,
                }

                if (this.weight != null) {
                    itemInfo.weight = this.weight
                }

                if (this.selectedSize.length > 0) {
                    itemInfo.availableSize = this.selectedSize.map(value => value.id)
                }

                if (this.weightUnit != '') {
                    itemInfo.unitType = this.weightUnit.id
                }

                addNewType(requestLink, itemInfo, token).then((result) => {
                    if (result.auth === false) {
                        this.errorResponse = result.response
                        $('html, body').animate({
                            scrollTop: 0
                        }, 'slow', function () {});
                    } else {
                        this.clear_fields()
                        this.successResponse = result.response
                        this.productID = this.successResponse.data._id
                        this.formDisplay = false
                        this.isLoading = false
                        this.thumbnaiUpload();
                    }
                    this.isDisable = false
                })
            },
            thumbnaiUpload() {
                let file = document.getElementById("thumbnail_photo").files[0]
                let data = new FormData()
                data.append('file', file)

                let requestLink = '/api/product/' + this.productID + '/thumbnail/upload'
                let token = localStorage.getItem('token')
                uploadImageUpdateInfo(requestLink, data, token).then((result) => {})
            },
            uploadFile() {
                this.isLoading = true
                this.clear_notifications();
                let file = document.getElementById("uploadedFile").files[0]
                let data = new FormData()
                data.append('file', file)

                let requestLink = '/api/product/' + this.productID + '/image/upload'
                let token = localStorage.getItem('token')
                uploadImageUpdateInfo(requestLink, data, token).then((result) => {
                    if (result.auth === false) {
                        this.errorResponse = result.response
                    } else {
                        this.successResponse = result.response
                        this.isLoading = false
                        this.uploadedImages = result.response.data.images
                    }
                })
            },
            removeFile(imageIndex) {
                this.isLoading = true
                let data = {
                    image_index: imageIndex
                }
                let requestLink = '/api/product/' + this.productID + '/image/remove'
                let token = localStorage.getItem('token')

                updateDataInfo(requestLink, data, token).then((result) => {
                    if (result.auth === false) {
                        this.errorResponse = result.response
                    } else {
                        this.successResponse = result.response
                        this.isLoading = false
                        this.uploadedImages = result.response.data.images
                    }

                })
            },
            propcessCompleted() {
                location.href = '<%= host %>/dashboard/product/create'
                this.clear_fields()
                this.formDisplay = true
                this.isLoading = false
                this.uploadedImages = []
                this.productID = null
                this.errorResponse = null
                this.successResponse = null
            }
        }
    })
</script>

<% include ../../partials/footer %>

<script>
    $(function () {
    //Datetimepicker plugin
    $('.datetimepicker').bootstrapMaterialDatePicker({
        format: 'YYYY-MM-DD',
        clearButton: true,
        weekStart: 1,
        time: false
    });
  });
  </script>