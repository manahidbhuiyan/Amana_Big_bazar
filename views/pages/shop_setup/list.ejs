<% include ../../partials/header %>

<% include ../../partials/nav %>

<% include ../../partials/left-sidebar %>

<!-- Main Content -->
<section class="content" id="property_type_section">

    <% include ../../partials/content/header %>

    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card">
                    <div class="body" v-on:scroll="handleScroll">
                        <div class="container" v-if="type_section === 'add'">
                            <div class="row clearfix">
                                <div class="col-lg-8 offset-lg-2">
                                    <div class="card" style="border: 1px solid rgb(155, 111, 193);">
                                        <div class="header">
                                            <h2><strong>Create</strong> Shop Setup </h2>
                                            <ul class="header-dropdown m-r--5">
                                                <li> <a href="javascript:void(0);" @click="remove_type_section"
                                                        role="button" aria-haspopup="true" aria-expanded="false"><i
                                                            class="material-icons">close</i></a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="body">
                                            <div v-if="errorResponse!==null">
                                                <div class="alert alert-danger" v-for="error in errorResponse">
                                                    {{error.msg}}
                                                    <button type="button" class="close" data-dismiss="alert"
                                                        aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            </div>
                                            <div v-if="successResponse!==null">
                                                <div class="alert alert-success">
                                                    {{successResponse.msg}}
                                                    <button type="button" class="close" data-dismiss="alert"
                                                        aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="row clearfix">
                                                <div class="col-sm-12">
                                                    <h6>From Branch</h6>
                                                    <div class="form-group">
                                                        <select class="form-control"
                                                            @change="getBranchSelect($event, from_branch)"
                                                            v-model="from_branch">
                                                            <option value="">-- Select Branch --</option>
                                                            <option :value="{id: branch._id, name: branch.name}"
                                                                v-for="(branch, index) in allBranch" :key="index"
                                                                class="text-capitalize">{{branch.name}}</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <h6>To Branch</h6>
                                                    <div class="form-group">
                                                        <select class="form-control" v-model="to_branch">
                                                            <option value="">-- Select Branch --</option>
                                                            <option :value="{id: branch._id, name: branch.name}"
                                                                v-for="(branch, index) in allToBranch" :key="index"
                                                                class="text-capitalize">{{branch.name}}</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <h6>Load categories of product</h6>
                                                    <div class="form-group">
                                                        <select class="form-control"
                                                            @change="getCategorySelect($event, category)"
                                                            v-model="category">
                                                            <option value="">-- Select Category --</option>
                                                            <option :value="{id: category._id, name: category.name}"
                                                                v-for="(category, index) in allCategory" :key="index"
                                                                class="text-capitalize">{{category.name}}</option>
                                                        </select>
                                                    </div>
                                                    <span class="badge badge-primary text-capitalize mr-2 mb-2"
                                                        style="font-size: 12px; cursor: pointer;"
                                                        v-for="(selectedCategory, index) in selectedCategories"
                                                        :key="index">{{selectedCategory.name}} <span
                                                            @click="removeCategorySelect(index)"
                                                            aria-hidden="true">&times;</span></span>
                                                </div>
                                            </div>
                                            <div class="row clearfix">
                                                <div class="col-sm-12">
                                                    <button type="submit" :disabled="isDisable" @click="addItem"
                                                        class="btn btn-primary btn-round">Submit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="container" v-if="type_section == 'edit'">
                            <div class="row clearfix">
                                <div class="col-lg-8 offset-lg-2">
                                    <div class="card" style="border: 1px solid rgb(155, 111, 193);">
                                        <div class="header">
                                            <h2><strong>Edit</strong> Subcategory </h2>
                                            <ul class="header-dropdown m-r--5">
                                                <li> <a href="javascript:void(0);" @click="remove_type_section"
                                                        role="button" aria-haspopup="true" aria-expanded="false"><i
                                                            class="material-icons">close</i></a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="body">
                                            <div v-if="errorResponse!==null">
                                                <div class="alert alert-danger" v-for="error in errorResponse">
                                                    {{error.msg}}
                                                    <button type="button" class="close" data-dismiss="alert"
                                                        aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            </div>
                                            <div v-if="successResponse!==null">
                                                <div class="alert alert-success">
                                                    {{successResponse.msg}}
                                                    <button type="button" class="close" data-dismiss="alert"
                                                        aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="row clearfix">
                                                <div class="col-sm-12">
                                                    <h6>From Branch</h6>
                                                    <div class="form-group">
                                                        <select class="form-control"
                                                            @change="getBranchSelect($event, from_branch)"
                                                            v-model="from_branch">
                                                            <option value="">-- Select Branch --</option>
                                                            <option :value="{id: branch._id, name: branch.name}"
                                                                v-for="(branch, index) in allBranch" :key="index"
                                                                class="text-capitalize">{{branch.name}}</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <h6>To Branch</h6>
                                                    <div class="form-group">
                                                        <select class="form-control" v-model="to_branch">
                                                            <option value="">-- Select Branch --</option>
                                                            <option :value="{id: branch._id, name: branch.name}"
                                                                v-for="(branch, index) in allToBranch" :key="index"
                                                                class="text-capitalize">{{branch.name}}</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-sm-12">
                                                    <div class="form-group">
                                                        <select class="form-control"
                                                            @change="getCategorySelect($event, category)"
                                                            v-model="category">
                                                            <option value="">-- Select Category --</option>
                                                            <option :value="{id: category._id, name: category.name}"
                                                                v-for="(category, index) in allCategory" :key="index"
                                                                class="text-capitalize">{{category.name}}</option>
                                                        </select>
                                                    </div>
                                                    <span class="badge badge-primary text-capitalize mr-2 mb-2"
                                                        style="font-size: 12px; cursor: pointer;"
                                                        v-for="(selectedCategory, index) in selectedCategories"
                                                        :key="index">{{selectedCategory.name}} <span
                                                            @click="removeCategorySelect(index)"
                                                            aria-hidden="true">&times;</span></span>
                                                </div>
                                            </div>
                                            <div class="row clearfix">
                                                <div class="col-sm-12">
                                                    <button type="submit" :disabled="isDisable"
                                                        @click="updateProjectType"
                                                        class="btn btn-primary btn-round">Submit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row justify-content-center clearfix">
                            <div class="col-lg-5">
                                <div v-if="type_section === 'delete'">
                                    <div v-if="errorResponse!==null">
                                        <div class="alert alert-danger" v-for="error in errorResponse">
                                            {{error.msg}}
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                    </div>
                                    <div v-if="successResponse!==null">
                                        <div class="alert alert-success">
                                            {{successResponse.msg}}
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-5 col-md-4 col-lg-3 col-xl-2 offset-md-1 offset-lg-2 offset-xl-3">
                                <div class="form-group">
                                    <select class="form-control" v-model="searchType">
                                        <option value="from_branch">From Branch Name</option>
                                        <option value="to_branch">To Branch Name</option>
                                        <option value="category">Category Name</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-7 col-md-6 col-lg-5 col-xl-4">
                                <div class="form-group">
                                    <input type="text" @keyup="searchData($event)" class="form-control"
                                        v-model="searchText" placeholder="Search Keyword">
                                </div>
                            </div>
                        </div>
                        <div class="row" v-if="isLoading">
                            <div class="spinner-border text-primary mt-4" style="margin: 0 auto" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="table-responsive" v-else>
                            <table class="table td_2 table-striped table-hover js-basic-example dataTable"
                                id="infoListTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>From Branch</th>
                                        <th>To Branch</th>
                                        <th>Category</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody v-if="allListItem.length > 0">
                                    <tr v-for="(item, index) in allListItem" :key="item._id">
                                        <td>{{ index + 1 }}</td>
                                        <td style="text-transform: capitalize;">{{item.from_branch.name}}</td>
                                        <td style="text-transform: capitalize;">{{item.to_branch.name}}</td>
                                        <td style="text-transform: capitalize;"><span class="badge badge-primary"
                                                style="font-size: 12px; cursor: pointer; margin-right: 5px;"
                                                v-for="(category, index) in item.category"
                                                :key="index">{{category.name}}</span></td>
                                        <td>
                                            <!-- <button :disabled="isDisable" @click="edit_item_section(item._id)"
                                                class="btn btn-icon btn-neutral btn-icon-mini"><i
                                                    class="zmdi zmdi-edit"></i></button> -->
                                            <button :disabled="isDisable" @click="deleteItem(item._id)"
                                                class="btn btn-icon btn-neutral btn-icon-mini"><i
                                                    class="zmdi zmdi-delete"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                                <tbody v-else>
                                    <tr>
                                        <td class="text-center" colspan="8">No data found here</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

</section>

<script>
    var pageNo = 1

    new Vue({
        el: '#property_type_section',
        data: {
            allListItem: [],
            searchType: 'from_branch',
            searchText: '',
            allCategory: [],
            selectedCategories: [],
            allBranch: [],
            allToBranch: [],
            selectedBranches: [],
            from_branch: '',
            to_branch: '',
            category: '',
            type_section: null,
            editItemID: '',
            editItemValue: '',
            errorResponse: null,
            successResponse: null,
            isDisable: false,
            isLoading: true,
            isNextDataLastEmpty: false,
            searchQueryString: ''

        },
        mounted() {
            this.getAllItemData()
            this.getBranchInfo()
            this.getCategoryInfo()
        },
        created() {
            window.addEventListener('scroll', this.handleScroll);
        },
        destroyed() {
            window.removeEventListener('scroll', this.handleScroll);
        },
        methods: {
            searchData(e) {
                if (e.keyCode === 13) {
                    pageNo = 1
                    this.allListItem = []
                    if (this.searchText == '') {
                        this.searchQueryString = ''
                    } else {
                        this.searchQueryString = 'type=' + this.searchType + '&&text=' + this.searchText
                    }
                    this.getAllItemData()
                }
            },
            getPositionHeight(element) {
                var rect = element.getBoundingClientRect();
                return (rect.y + 100) < $(window).height()
            },
            handleScroll(event) {
                // Any code to be executed when the window is scrolled
                if (this.getPositionHeight($('#infoListTable tbody tr:last-child').get(0)) === true && this
                    .isNextDataLastEmpty === false) {
                    if (!this.isNextDataLastEmpty) {
                        pageNo++
                        this.isNextDataLastEmpty = true
                        this.getAllItemData()
                    }
                }
            },
            getBranchInfo() {
                let requestLink = '/api/branch'
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allBranch = result.response.data
                    }
                })
            },
            getBranchSelect(e, branch) {
                let branchData = branch

                let requestLink = '/api/branch/expect/specific/' + branchData.id
                let token = localStorage.getItem('token')
                getSecureData(requestLink, token).then((result) => {
                    if (result.auth === true) {
                        this.allToBranch = result.response.data
                    }
                })
            },
            getCategoryInfo() {
                let requestLink = '/api/category'
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.allCategory = result.response.data
                    }
                })
            },
            getCategorySelect(e, category) {
                let categoryData = category
                if (categoryData !== '') {
                    if (this.selectedCategories.filter((selectedCategory => selectedCategory.id === categoryData
                            .id)).length == 0) {
                        this.selectedCategories.push(categoryData)
                    }
                    console.log(this.selectedCategories)
                    this.category = ''
                }
            },
            removeCategorySelect(removeindex) {
                this.selectedCategories = this.selectedCategories.filter((value, index) => index !==
                    removeindex)
            },
            getAllItemData() {
                let requestLink = '/api/shop-setup/' + pageNo + '?' + this.searchQueryString
                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        if (result.response.data.length === 0) {
                            this.isNextDataLastEmpty = true
                        } else {
                            result.response.data.map((data) => {
                                this.allListItem.push(data)
                            })
                            console.log(this.allListItem)
                            this.isNextDataLastEmpty = false
                        }
                        this.isLoading = false
                    }
                })
            },
            clear_notifications() {
                this.errorResponse = null
                this.successResponse = null
            },
            add_type_section() {
                this.remove_type_section()
                this.type_section = 'add'
            },
            edit_item_section(ItemID) {
                this.editItemID = ItemID
                this.remove_type_section()
                this.isDisable = true
                this.type_section = 'edit'
                let requestLink = '/api/shop-setup/data/' + ItemID

                getType(requestLink).then((result) => {
                    if (result.auth === true) {
                        this.from_branch = {
                            id: result.response.data.from_branch._id,
                            name: result.response.data.from_branch.name
                        }

                        let requestLink = '/api/branch/expect/specific/' + result.response.data
                            .from_branch._id
                        let token = localStorage.getItem('token')
                        getSecureData(requestLink, token).then((result) => {
                            if (result.auth === true) {
                                this.allToBranch = result.response.data
                            }
                        }).then(() => {
                            this.to_branch = {
                                id: result.response.data.to_branch._id,
                                name: result.response.data.to_branch.name
                            }
                        })



                        this.selectedCategories = result.response.data.category.map(value => {
                            return {
                                id: value._id,
                                name: value.name
                            }
                        })

                        $('html, body').animate({
                            scrollTop: 0
                        }, 'slow', function () {});
                    }
                    this.isDisable = false
                })
            },
            remove_type_section() {
                this.clear_notifications()
                this.type_section = null
                this.clear_fields()
            },
            clear_fields() {
                this.selectedBranches = []
                this.selectedCategories = []
                this.name = ''
                this.branch = ''
                this.category = ''
                this.size_active = false
                this.weight_active = false
            },
            addItem() {
                this.clear_notifications()
                this.isDisable = true
                this.isLoading = true
                let requestLink = '/api/product/branch/category/wise/product'
                let token = localStorage.getItem('token')

                let itemInfo = {
                    from_branch: this.from_branch.id,
                    to_branch: this.to_branch.id,
                    category: this.selectedCategories.map(value => value.id)
                }

                addNewType(requestLink, itemInfo, token).then((result) => {
                    if (result.auth === false) {
                        this.errorResponse = result.response
                    }

                    console.log(itemInfo)

                    return itemInfo;
                }).then((itemInfo) => {
                    let requestLink = '/api/shop-setup'
                    let token = localStorage.getItem('token')
                    addNewType(requestLink, itemInfo, token).then((result) => {
                        if (result.auth === false) {
                            this.errorResponse = result.response
                        } else {
                            this.clear_fields()
                            this.allListItem = []
                            this.successResponse = result.response
                            pageNo = 1
                            this.getAllItemData()
                        }
                        this.isDisable = false
                        this.isLoading = false
                    })

                })
            },
            updateProjectType() {
                this.isDisable = true
                this.isLoading = true
                let requestLink = '/api/shop-setup'
                let token = localStorage.getItem('token')
                updateTypeInfo(requestLink, {
                    shopSetupID: this.editItemID,
                    from_branch: this.from_branch.id,
                    to_branch: this.to_branch.id,
                    category: this.selectedCategories.map(value => value.id)
                }, token).then((result) => {
                    let successMessage = result.response
                    let requestLink = '/api/product/branch/category/wise/product'
                    let token = localStorage.getItem('token')
                    addNewType(requestLink, {
                        from_branch: this.from_branch.id,
                        to_branch: this.to_branch.id,
                        category: this.selectedCategories.map(value => value.id)
                    }, token).then((result) => {
                        if (result.auth === false) {
                            this.errorResponse = result.response
                        } else {
                            this.allListItem = []
                            pageNo = 1
                            this.successResponse = successMessage
                            this.getAllItemData()
                        }
                        this.isDisable = false
                    });

                })
            },
            deleteItem(ItemID) {
                showDeleteConfirmationMessage().then((value) => {
                    if (value === true) {
                        this.remove_type_section()
                        this.isDisable = true
                        this.isLoading = true
                        let requestLink = '/api/shop-setup/'
                        let token = localStorage.getItem('token')

                        deleteType(requestLink, ItemID, token).then((result) => {
                            this.type_section = 'delete'
                            if (result.auth === false) {
                                this.errorResponse = result.response
                            } else {
                                this.allListItem = []
                                pageNo = 1
                                this.getAllItemData()
                                this.successResponse = result.response
                                $('html, body').animate({
                                    scrollTop: 0
                                }, 'slow', function () {});
                            }
                            this.isLoading = false
                            this.isDisable = false
                        })
                    }
                })


            }
        }
    })
</script>

<% include ../../partials/footer %>