<% include ../../partials/header %>

    <% include ../../partials/nav %>

        <% include ../../partials/left-sidebar %>
            <style>
                body {
                    padding-right: 0px !important;
                }

                .dtp .p10>a {
                    color: white;
                    text-decoration: none;
                }

                .dtp>.dtp-content>.dtp-date-view>header.dtp-header {
                    background: #7e6990;
                    color: #fff;
                    text-align: center;
                    padding: 0.3em;
                }

                .dtp div.dtp-date,
                .dtp div.dtp-time {
                    background: #7e6990;
                    text-align: center;
                    color: #fff;
                    padding: 10px;
                }

                .dtp table.dtp-picker-days tr>td>a.selected {
                    background: #7e6990;
                    color: #fff;
                }
            </style>
            <!-- Main Content -->
            <div id="property_type_section">
                <section class="content">

                    <% include ../../partials/content/header %>

                        <div class="container-fluid">
                            <div class="row clearfix">
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="body" v-on:scroll="handleScroll">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <p class="text-center text-primary">Your current branch is :
                                                        <strong>{{branch.name}}</strong>
                                                    </p>
                                                    <button @click="changeBranch"
                                                        class="btn btn-primary float-right">Change Branch</button>
                                                </div>
                                            </div>
                                            <div class="row justify-content-center clearfix">
                                                <div class="col-lg-5">
                                                    <div v-if="type_section === 'delete'">
                                                        <div v-if="errorResponse!==null">
                                                            <div class="alert alert-danger"
                                                                v-for="error in errorResponse">
                                                                {{error.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div v-if="successResponse!==null">
                                                            <div class="alert alert-success">
                                                                {{successResponse.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div
                                                    class="col-5 col-md-4 col-lg-3 col-xl-2 offset-md-1 offset-lg-2 offset-xl-3">
                                                    <div class="form-group">
                                                        <select class="form-control" v-model="searchType">
                                                            <option value="barcode">Barcode</option>
                                                            <option value="name">Product Name</option>
                                                            <option value="brand">Brand Name</option>
                                                            <option value="category">Category Name</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-7 col-md-6 col-lg-5 col-xl-4">
                                                    <div class="form-group">
                                                        <input type="text" @keyup="searchData($event)"
                                                            class="form-control" v-model="searchText"
                                                            placeholder="Search Keyword">
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <p class="text-left text-primary pl-10">Total number of poroducts is
                                                        <strong>{{totalProducts}}</strong>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="row" v-if="isLoading">
                                                <div class="spinner-border text-primary mt-4" style="margin: 0 auto"
                                                    role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                            <div class="table-responsive" v-else>
                                                <table
                                                    class="table td_2 table-striped table-hover js-basic-example dataTable"
                                                    id="infoListTable">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Barcode</th>
                                                            <th>Name</th>
                                                            <th style="text-transform: capitalize; text-align: center;">
                                                                Inventory Qty</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody v-if="allListItem.length > 0">
                                                        <tr v-for="(item, index) in allListItem" :key="item._id">
                                                            <td style="vertical-align: middle">{{ index + 1 }}</td>
                                                            <td
                                                                style="text-transform: capitalize; vertical-align: middle">
                                                                {{item.barcode}}
                                                            </td>
                                                            <td
                                                                style="text-transform: capitalize; vertical-align: middle">
                                                                {{item.name}}</td>
                                                            <td
                                                                style="text-transform: capitalize; text-align: center; vertical-align: middle">
                                                                {{item.stock_quantity}}
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                    <tbody v-else>
                                                        <tr>
                                                            <td class="text-center" colspan="6">No data found here</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                </section>
            </div>


            <script>
                var pageNo = 1

                new Vue({
                    el: '#property_type_section',
                    data: {
                        categoryCheckbox: true,
                        subcategoryCheckbox: false,
                        brandCheckbox: false,
                        supplierCheckbox: false,
                        allSupplier: [],
                        allBrand: [],
                        allSubcategory: [],
                        allCategory: [],
                        supplier: '',
                        category: '',
                        subcategory: '',
                        brand: '',
                        searchPageNo: 1,
                        searchedItemCount: {
                            total: 0,
                            loadMore: false
                        },
                        reasonList: [],
                        reason: "",
                        remarks: "",
                        allSearchedData: [],
                        isSearchLoading: false,
                        disposalList: [],
                        disposalProductList: [],
                        allListItem: [],
                        searchType: 'name',
                        searchText: '',
                        type_section: null,
                        errorResponse: null,
                        successResponse: null,
                        isLoading: false,
                        isNextDataLastEmpty: false,
                        searchQueryString: '',
                        advancedSearchText: '',
                        branch: '',
                        totalProducts: 0,
                        isSavedState: true,
                        downloadRequestID: null,
                        searchQueryStringDisposal: ''
                    },
                    mounted() {
                        this.checkBranchInfo()
                        this.getCategoryInfo()
                    },
                    created() {
                        window.addEventListener('scroll', this.handleScroll);
                    },
                    destroyed() {
                        window.removeEventListener('scroll', this.handleScroll);
                    },
                    methods: {
                        getCategoryInfo() {
                            let requestLink = '/api/category'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allCategory = result.response.data
                                }
                            })
                        },
                        getSubcategoryInfo(value) {
                            //this.vat = value.vat;
                            let requestLink = '/api/subcategory/category/' + value.id
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allSubcategory = result.response.data
                                }
                            })
                        },
                        getBrandInfo(value) {
                            let requestLink = '/api/brand/subcategory/' + value.id
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allBrand = result.response.data
                                }
                            })
                        },
                        selectSubCategory(value) {
                            this.getBrandInfo(value)
                        },
                        getSupplierInfo(value) {
                            let requestLink = '/api/supplier/brand/' + value.id + '?activeSupplier=true&warehouseSupplier=true'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allSupplier = result.response.data
                                }
                            })
                        },
                        getSearchedItems(e, searchType) {
                            this.allSearchedData = []
                            this.searchPageNo = 1
                            let branchID = localStorage.getItem('branch')
                            let searchText = "?branch=" + branchID
                            if (searchType == 'requisition_no_search') {
                                searchText += ('&serialNo=' + this.requisitionNo)
                            }

                            if (searchType == 'requisition_from_to_search') {
                                searchText += ('&from=' + $("#searchFromDate").val() + '&to=' + $("#searchToDate").val())
                            }
                            this.searchQueryStringDisposal = searchText
                            this.getSearchData()
                        },
                        changeBranch() {
                            localStorage.removeItem('branch')
                            localStorage.setItem('referrerURL', window.location.href)
                            location.href = '<%= host %>' + '/product/branch/select'
                        },
                        checkBranchInfo() {
                            if (localStorage.getItem('branch')) {
                                let branchID = localStorage.getItem('branch')

                                let requestLink = '/api/branch/data/' + branchID
                                getType(requestLink).then((result) => {
                                    if (result.auth === true) {
                                        this.branch = {
                                            id: result.response.data._id,
                                            serialNo: result.response.data.serialNo,
                                            name: result.response.data.name
                                        }
                                    } else {
                                        localStorage.removeItem('branch')
                                        localStorage.setItem('referrerURL', window.location.href)
                                        location.href = '<%= host %>' + '/product/branch/select'
                                    }
                                })
                            } else {
                                localStorage.removeItem('branch')
                                localStorage.setItem('referrerURL', window.location.href)
                                location.href = '<%= host %>' + '/product/branch/select'
                            }
                        },
                        searchData(e) {
                            if (e.keyCode === 13) {
                                pageNo = 1
                                this.allListItem = []
                                this.searchedItemCount = 0
                                if (this.searchText == '') {
                                    this.searchQueryString = ''
                                } else {
                                    this.searchQueryString = 'type=' + this.searchType + '&&text=' + this.searchText
                                }
                                this.getAllItemData()
                            }
                        },
                        getPositionHeight(element) {
                            var rect = element.getBoundingClientRect();
                            return (rect.y + 100) < $(window).height()
                        },
                        handleScroll(event) {
                            // Any code to be executed when the window is scrolled
                            if (this.getPositionHeight($('#infoListTable tbody tr:last-child').get(0)) === true && this
                                .isNextDataLastEmpty === false) {
                                if (!this.isNextDataLastEmpty) {
                                    pageNo++
                                    this.isNextDataLastEmpty = true
                                    this.getAllItemData()
                                }
                            }
                        },
                        getAllItemData() {
                            let requestLink = '/api/warehouse/inventory/list/' + pageNo + '?' + this.searchQueryString + '&branch=' +
                                localStorage.getItem('branch')
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    if (result.response.data.length === 0) {
                                        this.isNextDataLastEmpty = true
                                    } else {
                                        this.totalProducts = result.response.count
                                        result.response.data.map((data) => {
                                            this.allListItem.push(data)
                                        })
                                        this.isNextDataLastEmpty = false
                                    }
                                    this.isLoading = false
                                }
                            })
                        },
                        clear_notifications() {
                            this.errorResponse = null
                            this.successResponse = null
                        },
                        add_type_section() {
                            this.remove_type_section()
                            this.type_section = 'add'
                        },
                        remove_type_section() {
                            this.clear_notifications()
                            this.type_section = null
                            this.clear_fields()
                        },
                        clear_fields() {
                            this.downloadRequestID = null
                            this.selectedBranches = []
                            this.selectedCategories = []
                            this.selectedSubcategories = []
                            this.selectedBrands = []
                            this.name = ''
                            this.phone = []
                            this.phoneNumber = ''
                            this.address = ''
                            this.branch = ''
                            this.category = ''
                            this.subcategory = ''
                            this.brand = ''
                            this.instantPayment = false
                        },
                        dataReset() {
                            this.reason = ""
                            this.remarks = ""
                            this.isSavedState = true
                            this.disposalList = []
                            this.disposalProductList = []
                        }
                    }
                })
            </script>

            <script>
                $(function () {
                    //Datetimepicker plugin
                    $('.datetimepicker').bootstrapMaterialDatePicker({
                        format: 'YYYY-MM-DD',
                        clearButton: true,
                        weekStart: 1,
                        time: false
                    });
                });
            </script>

            <% include ../../partials/footer %>