<% include ../../partials/header %>

    <% include ../../partials/nav %>

        <% include ../../partials/left-sidebar %>
            <style>
                body {
                    padding-right: 0px !important;
                }

                .dtp .p10>a {
                    color: white;
                    text-decoration: none;
                }

                .dtp>.dtp-content>.dtp-date-view>header.dtp-header {
                    background: #7e6990;
                    color: #fff;
                    text-align: center;
                    padding: 0.3em;
                }

                .dtp div.dtp-date,
                .dtp div.dtp-time {
                    background: #7e6990;
                    text-align: center;
                    color: #fff;
                    padding: 10px;
                }

                .dtp table.dtp-picker-days tr>td>a.selected {
                    background: #7e6990;
                    color: #fff;
                }
            </style>
            <!-- Main Content -->
            <div id="property_type_section">
                <div class="modal fade" id="advancedProductSearch" tabindex="-1" role="dialog">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="title" id="defaultModalLabel">Search Products</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form @submit.prevent="advancedSearchData()">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="checkbox"
                                                        id="categoryCheckbox" v-model="categoryCheckbox" disabled>
                                                    <label class="form-check-label"
                                                        for="categoryCheckbox">Category</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="checkbox"
                                                        id="subcategoryCheckbox" v-model="subcategoryCheckbox">
                                                    <label class="form-check-label"
                                                        for="subcategoryCheckbox">Subcategory</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="checkbox" id="brandCheckbox"
                                                        v-model="brandCheckbox">
                                                    <label class="form-check-label" for="brandCheckbox">Brand</label>
                                                </div>
                                                <div class="form-check form-check-inline">
                                                    <input class="form-check-input" type="checkbox"
                                                        id="supplierCheckbox" v-model="supplierCheckbox">
                                                    <label class="form-check-label"
                                                        for="supplierCheckbox">Supplier</label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-12" v-show="categoryCheckbox">
                                            <div class="form-group">
                                                <select class="form-control" @change="getSubcategoryInfo(category)"
                                                    v-model="category" required>
                                                    <option value="">-- Select Category --</option>
                                                    <option
                                                        :value="{id: category._id, name: category.name, vat: category.vat}"
                                                        v-for="(category, index) in allCategory" :key="index"
                                                        class="text-capitalize">{{category.name}}</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-sm-12" v-show="subcategoryCheckbox">
                                            <div class="form-group">
                                                <select class="form-control" @change="selectSubCategory(subcategory)"
                                                    v-model="subcategory">
                                                    <option value="">-- Select Subcategory --</option>
                                                    <option
                                                        :value="{id: subcategory._id, name: subcategory.name, isSizeAvailable: subcategory.isSizeAvailable, isWeightAvailable: subcategory.isWeightAvailable}"
                                                        v-for="(subcategory, index) in allSubcategory" :key="index"
                                                        class="text-capitalize">{{subcategory.name}}</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-sm-12" v-show="brandCheckbox">
                                            <div class="form-group">
                                                <select class="form-control" @change="getSupplierInfo(brand)"
                                                    v-model="brand">
                                                    <option value="">-- Select Brand --</option>
                                                    <option :value="{id: brand._id, name: brand.name}"
                                                        v-for="(brand, index) in allBrand" :key="index"
                                                        class="text-capitalize">
                                                        {{brand.name}}</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-sm-12" v-show="supplierCheckbox">
                                            <div class="form-group">
                                                <select class="form-control" v-model="supplier">
                                                    <option value="">-- Select Supplier --</option>
                                                    <option :value="{id: supplier._id, name: supplier.name}"
                                                        v-for="(supplier, index) in allSupplier" :key="index"
                                                        class="text-capitalize">{{supplier.name}}</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-sm-12">
                                            <div class="form-group">
                                                <input style="width: 100%;" type="text" class="form-control"
                                                    placeholder="Product Name" v-model="advancedSearchText">
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <button type="submit" class="btn btn-primary waves-effect">Search</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="seeHistory" tabindex="-1" role="dialog">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="title" id="defaultModalLabel">Reconciliation Collection</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form @submit.prevent="getSearchedItems($event, 'requisition_from_to_search')">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <input style="width: 100%;" type="text" id="searchFromDate"
                                                    class="form-control datetimepicker" placeholder="From" required>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <input style="width: 100%;" type="text" id="searchToDate"
                                                    class="form-control datetimepicker" placeholder="To" required>
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <button type="submit" class="btn btn-primary waves-effect">Search</button>
                                        </div>
                                    </div>
                                </form>
                                <div class="row">
                                    <div class="col-sm-12" v-if="isSearchLoading">
                                        <div class="spinner-border text-primary mt-4" style="margin: 0 auto"
                                            role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                    </div>
                                    <div class="col-sm-12" v-else v-show="!isSearchLoading">
                                        <table
                                            class="table td_2 table-striped table-hover js-basic-example dataTable text-center"
                                            id="infoListTable">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Reconciliation No</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody v-show="allSearchedData.length > 0">
                                                <tr v-for="(productDiscountInfo, index) in allSearchedData"
                                                    :key="index">
                                                    <td>{{index+1}}</td>
                                                    <td>{{productDiscountInfo.serialNo}}</td>
                                                    <td>
                                                        <button type="button" class="btn btn-primary" style="padding: 4px 12px;
                                                margin: 0;"
                                                            @click="downloadProductDiscountSlip(productDiscountInfo._id)">Reconciliation
                                                            Details</button>
                                                    </td>
                                                </tr>
                                                <tr v-if="searchedItemCount.loadMore==true">
                                                    <td colspan="5">
                                                        <button class="btn btn-primary" @click="getSearchData()">Load
                                                            more</button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                            <tbody v-show="allSearchedData.length == 0">
                                                <tr>
                                                    <td colspan="5">No data found</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="col-sm-12" v-show="allSearchedData.length > 0">
                                        <p class="text-primary">Total <strong>{{this.searchedItemCount.total}}</strong>
                                            searched
                                            data found.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="barcodePrintModal" tabindex="-1" role="dialog">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="title" id="defaultModalLabel">Reconciliation Collection List</h4>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <h6 class="mt-2 mb-2">Reason</h6>
                                        <div class="form-group">
                                            <select class="form-control" v-model="reason">
                                                <option value="">-- Select Reason --</option>
                                                <option :value="reason" style="text-transform: capitalize;"
                                                    v-for="(reason, index) in reasonList">{{reason}}</option>
                                            </select>
                                        </div>
                                    </div>
                                    <table class="table td_2 table-striped table-hover js-basic-example dataTable"
                                        id="infoListTable">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>Barcode</th>
                                                <th>Quantity</th>
                                                <th>Reconciliation</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody v-if="disposalList.length > 0">
                                            <tr v-for="(item, index) in disposalList" :key="item._id">
                                                <td>{{ index + 1 }}</td>
                                                <td style="text-transform: capitalize;">{{item.barcode}}</td>
                                                <td style="text-transform: capitalize;">{{item.stock}}</td>
                                                <td style="text-transform: capitalize;">{{item.reconciliation}}</td>
                                                <td>
                                                    <button @click="removeFromDisposalList(index)"
                                                        class="btn btn-primary"><span
                                                            aria-hidden="true">×</span></button>
                                                </td>
                                            </tr>
                                        </tbody>
                                        <tbody v-else>
                                            <tr>
                                                <td class="text-center" colspan="5">No data found here</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <div class="col-lg-12">
                                        <h6 class="mt-2 mb-2">Remarks</h6>
                                        <div class="form-group">
                                            <input type="text" v-model="remarks" class="form-control"
                                                placeholder="Remarks">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary waves-effect" @click="saveProductPriceMark"
                                    v-if="disposalList.length > 0" v-show="isSavedState"
                                    :disabled="isLoading">Save</button>
                                <button type="submit" class="btn btn-primary waves-effect" data-backdrop="static"
                                    data-keyboard="false" @click="downloadProductDiscountSlip(downloadRequestID)"
                                    v-show="!isSavedState" :disabled="isLoading">Download Reconciliation List</button>
                                <button type="button" class="btn btn-primary waves-effect" @click="dataReset"
                                    v-if="disposalList.length > 0">Reset</button>
                            </div>
                        </div>
                    </div>
                </div>
                <section class="content">

                    <% include ../../partials/content/header %>

                        <div class="container-fluid">
                            <div class="row clearfix">
                                <div class="col-lg-12">
                                    <div class="card">
                                        <div class="body" v-on:scroll="handleScroll">
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <p class="text-center text-primary">Your current branch is :
                                                        <strong>{{branch.name}}</strong>
                                                    </p>
                                                    <button @click="changeBranch"
                                                        class="btn btn-primary float-right">Change Branch</button>
                                                </div>
                                            </div>
                                            <div class="row justify-content-center clearfix">
                                                <div class="col-lg-5">
                                                    <div v-if="type_section === 'delete'">
                                                        <div v-if="errorResponse!==null">
                                                            <div class="alert alert-danger"
                                                                v-for="error in errorResponse">
                                                                {{error.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div v-if="successResponse!==null">
                                                            <div class="alert alert-success">
                                                                {{successResponse.msg}}
                                                                <button type="button" class="close" data-dismiss="alert"
                                                                    aria-label="Close">
                                                                    <span aria-hidden="true">&times;</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">

                                                <div class="col-12 text-center m-b-10">
                                                    <button type="submit" data-toggle="modal"
                                                        data-target="#barcodePrintModal"
                                                        class="btn btn-primary waves-effect m-r-20"
                                                        data-backdrop="static" data-keyboard="false">Reconciliation
                                                        Collection
                                                        List (<strong>{{disposalList.length}}</strong>)</button>
                                                    <button type="submit" data-toggle="modal" data-target="#seeHistory"
                                                        class="btn btn-primary waves-effect m-r-20"
                                                        data-backdrop="static" data-keyboard="false">Reconciliation
                                                        Records</button>
                                                    <button type="submit" data-toggle="modal"
                                                        data-target="#advancedProductSearch"
                                                        class="btn btn-primary waves-effect m-r-20"
                                                        data-backdrop="static" data-keyboard="false">Advanced
                                                        Search</button>
                                                </div>
                                                <div
                                                    class="col-5 col-md-4 col-lg-3 col-xl-2 offset-md-1 offset-lg-2 offset-xl-3">
                                                    <div class="form-group">
                                                        <select class="form-control" v-model="searchType">
                                                            <option value="barcode">Barcode</option>
                                                            <option value="name">Product Name</option>
                                                            <option value="brand">Brand Name</option>
                                                            <option value="category">Category Name</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-7 col-md-6 col-lg-5 col-xl-4">
                                                    <div class="form-group">
                                                        <input type="text" @keyup="searchData($event)"
                                                            class="form-control" v-model="searchText"
                                                            placeholder="Search Keyword">
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <p class="text-left text-primary pl-10">Total number of poroducts is
                                                        <strong>{{totalProducts}}</strong>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class="row" v-if="isLoading">
                                                <div class="spinner-border text-primary mt-4" style="margin: 0 auto"
                                                    role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                            <div class="table-responsive" v-else>
                                                <table
                                                    class="table td_2 table-striped table-hover js-basic-example dataTable"
                                                    id="infoListTable">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Barcode</th>
                                                            <th>Name</th>
                                                            <th>Quantity</th>
                                                            <th>Reconciliation</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody v-if="allListItem.length > 0">
                                                        <tr v-for="(item, index) in allListItem" :key="item._id">
                                                            <td>{{ index + 1 }}</td>
                                                            <td style="text-transform: capitalize;">{{item.barcode}}
                                                            </td>
                                                            <td style="text-transform: capitalize;">{{item.name}}</td>
                                                            <td style="text-transform: capitalize;">{{item.quantity}}
                                                            </td>
                                                            <td>
                                                                <div class="form-group"><input type="text"
                                                                        :id="'disposal_'+item._id"
                                                                        :data-quantity="item.quantity" value="0"
                                                                        placeholder="Reconciliation"
                                                                        class="form-control">
                                                                </div>
                                                            </td>
                                                            <td>
                                                                <button @click="addToDisposalCollection(item._id)"
                                                                    class="btn btn-primary">Add to List</button>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                    <tbody v-else>
                                                        <tr>
                                                            <td class="text-center" colspan="6">No data found here</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                </section>
            </div>


            <script>
                var pageNo = 1

                new Vue({
                    el: '#property_type_section',
                    data: {
                        categoryCheckbox: true,
                        subcategoryCheckbox: false,
                        brandCheckbox: false,
                        supplierCheckbox: false,
                        allSupplier: [],
                        allBrand: [],
                        allSubcategory: [],
                        allCategory: [],
                        supplier: '',
                        category: '',
                        subcategory: '',
                        brand: '',
                        searchPageNo: 1,
                        searchedItemCount: {
                            total: 0,
                            loadMore: false
                        },
                        reasonList: [],
                        reason: "",
                        remarks: "",
                        allSearchedData: [],
                        isSearchLoading: false,
                        disposalList: [],
                        disposalProductList: [],
                        allListItem: [],
                        searchType: 'name',
                        searchText: '',
                        type_section: null,
                        errorResponse: null,
                        successResponse: null,
                        isLoading: false,
                        isNextDataLastEmpty: false,
                        searchQueryString: '',
                        advancedSearchText: '',
                        branch: '',
                        totalProducts: 0,
                        isSavedState: true,
                        downloadRequestID: null,
                        searchQueryStringDisposal: ''
                    },
                    mounted() {
                        this.checkBranchInfo()
                        this.getCategoryInfo()
                        this.getPurposeData()
                    },
                    created() {
                        window.addEventListener('scroll', this.handleScroll);
                    },
                    destroyed() {
                        window.removeEventListener('scroll', this.handleScroll);
                    },
                    methods: {
                        getPurposeData() {
                            let requestLink = '/api/lookup/info/data/search/reconciliation_purpose'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    result.response.data.map(purposeInfo => {
                                        this.reasonList.push(purposeInfo.title)
                                    })
                                }
                            })
                        },
                        getCategoryInfo() {
                            let requestLink = '/api/category'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allCategory = result.response.data
                                }
                            })
                        },
                        getSubcategoryInfo(value) {
                            //this.vat = value.vat;
                            let requestLink = '/api/subcategory/category/' + value.id
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allSubcategory = result.response.data
                                }
                            })
                        },
                        getBrandInfo(value) {
                            let requestLink = '/api/brand/subcategory/' + value.id
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allBrand = result.response.data
                                }
                            })
                        },
                        selectSubCategory(value) {
                            this.getBrandInfo(value)
                        },
                        getSupplierInfo(value) {
                            let requestLink = '/api/supplier/brand/' + value.id + '?activeSupplier=true&warehouseSupplier=true'
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    this.allSupplier = result.response.data
                                }
                            })
                        },
                        getSearchData() {
                            let branchID = localStorage.getItem('branch')
                            let token = localStorage.getItem('token')

                            let requestLink = '/api/warehouse/reconciliation/' + this.searchPageNo + this.searchQueryStringDisposal
                            this.isSearchLoading = true
                            getSecureData(requestLink, token).then((result) => {
                                if (result.auth === true) {
                                    result.response.data.map((requisitionInfo) => {
                                        this.allSearchedData.push(requisitionInfo)
                                    })
                                    this.searchedItemCount = {
                                        total: result.response.total,
                                        loadMore: result.response.loadMore
                                    }
                                    this.searchPageNo = this.searchPageNo + 1
                                }
                                this.isSearchLoading = false
                            })
                        },
                        getSearchedItems(e, searchType) {
                            this.allSearchedData = []
                            this.searchPageNo = 1
                            let searchText = ""
                            if (searchType == 'requisition_no_search') {
                                searchText += ('?serialNo=' + this.requisitionNo)
                            }

                            if (searchType == 'requisition_from_to_search') {
                                searchText += ('?from=' + $("#searchFromDate").val() + '&to=' + $("#searchToDate").val())
                            }
                            this.searchQueryStringDisposal = searchText
                            this.getSearchData()
                        },
                        changeBranch() {
                            localStorage.removeItem('branch')
                            localStorage.setItem('referrerURL', window.location.href)
                            location.href = '<%= host %>' + '/product/branch/select'
                        },
                        checkBranchInfo() {
                            if (localStorage.getItem('branch')) {
                                let branchID = localStorage.getItem('branch')

                                let requestLink = '/api/branch/data/' + branchID
                                getType(requestLink).then((result) => {
                                    if (result.auth === true) {
                                        this.branch = {
                                            id: result.response.data._id,
                                            serialNo: result.response.data.serialNo,
                                            name: result.response.data.name
                                        }
                                    } else {
                                        localStorage.removeItem('branch')
                                        localStorage.setItem('referrerURL', window.location.href)
                                        location.href = '<%= host %>' + '/product/branch/select'
                                    }
                                })
                            } else {
                                localStorage.removeItem('branch')
                                localStorage.setItem('referrerURL', window.location.href)
                                location.href = '<%= host %>' + '/product/branch/select'
                            }
                        },
                        searchData(e) {
                            if (e.keyCode === 13) {
                                pageNo = 1
                                this.allListItem = []
                                this.searchedItemCount = 0
                                if (this.searchText == '') {
                                    this.searchQueryString = ''
                                } else {
                                    this.searchQueryString = 'type=' + this.searchType + '&&text=' + this.searchText
                                }
                                this.getAllItemData()
                            }
                        },
                        advancedSearchData() {
                            pageNo = 1
                            this.allListItem = []
                            this.searchedItemCount = 0
                            this.searchQueryString = ''
                            if (this.categoryCheckbox) {
                                this.searchQueryString += 'category=' + this.category.id
                            }

                            if (this.subcategoryCheckbox) {
                                this.searchQueryString += '&&subcategory=' + this.subcategory.id
                            }

                            if (this.brandCheckbox) {
                                this.searchQueryString += '&&brand=' + this.brand.id
                            }

                            if (this.supplierCheckbox) {
                                this.searchQueryString += '&&suplier=' + this.supplier.id
                            }

                            if (this.advancedSearchText != '') {
                                this.searchQueryString += '&&text=' + this.advancedSearchText
                            }

                            this.getAllItemData()
                            $("#advancedProductSearch").modal('toggle');
                        },
                        getPositionHeight(element) {
                            var rect = element.getBoundingClientRect();
                            return (rect.y + 100) < $(window).height()
                        },
                        handleScroll(event) {
                            // Any code to be executed when the window is scrolled
                            if (this.getPositionHeight($('#infoListTable tbody tr:last-child').get(0)) === true && this
                                .isNextDataLastEmpty === false) {
                                if (!this.isNextDataLastEmpty) {
                                    pageNo++
                                    this.isNextDataLastEmpty = true
                                    this.getAllItemData()
                                }
                            }
                        },
                        getAllItemData() {
                            let requestLink = '/api/warehouse/product/list/' + pageNo + '?' + this.searchQueryString
                            getType(requestLink).then((result) => {
                                if (result.auth === true) {
                                    if (result.response.data.length === 0) {
                                        this.isNextDataLastEmpty = true
                                    } else {
                                        this.totalProducts = result.response.count
                                        result.response.data.map((data) => {
                                            this.allListItem.push(data)
                                        })
                                        this.isNextDataLastEmpty = false
                                    }
                                    this.isLoading = false
                                }
                            })
                        },
                        clear_notifications() {
                            this.errorResponse = null
                            this.successResponse = null
                        },
                        add_type_section() {
                            this.remove_type_section()
                            this.type_section = 'add'
                        },
                        remove_type_section() {
                            this.clear_notifications()
                            this.type_section = null
                            this.clear_fields()
                        },
                        clear_fields() {
                            this.downloadRequestID = null
                            this.selectedBranches = []
                            this.selectedCategories = []
                            this.selectedSubcategories = []
                            this.selectedBrands = []
                            this.name = ''
                            this.phone = []
                            this.phoneNumber = ''
                            this.address = ''
                            this.branch = ''
                            this.category = ''
                            this.subcategory = ''
                            this.brand = ''
                            this.instantPayment = false
                        },
                        addToDisposalCollection(ItemID) {
                            let disposalNo = Number($("#disposal_" + ItemID.toString()).val())
                            let stockQty = Number($("#disposal_" + ItemID.toString()).data('quantity'))

                            this.allListItem.map((product, index) => {
                                if (product._id == ItemID) {
                                    if (this.disposalProductList.includes(ItemID)) {
                                        alert("This product is already into list.")
                                    } else {
                                        this.disposalProductList.push(ItemID)
                                        this.disposalList.push({
                                            _id: product._id,
                                            name: product.name,
                                            barcode: product.barcode,
                                            price: product.price,
                                            vat: product.vat,
                                            reconciliation: Number(disposalNo),
                                            stock: product.quantity
                                        })
                                    }

                                }
                            })

                        },
                        removeFromDisposalList(index) {
                            this.disposalProductList.splice(index, 1)
                            this.disposalList.splice(index, 1)
                        },
                        saveProductPriceMark() {
                            this.isLoading = true
                            let requestLink = '/api/warehouse/reconciliation'
                            let token = localStorage.getItem('token')

                            let itemInfo = {
                                reason: this.reason,
                                remarks: this.remarks,
                                products: this.disposalList
                            }

                            addNewType(requestLink, itemInfo, token).then((result) => {
                                this.errorResponse = null
                                if (result.auth == true) {
                                    this.successResponse = result.response
                                    this.downloadRequestID = result.response.data._id
                                    this.isSavedState = false
                                } else {
                                    this.errorResponse = result.response
                                }
                                this.isLoading = false
                            })
                        },
                        dataReset() {
                            this.reason = ""
                            this.remarks = ""
                            this.isSavedState = true
                            this.disposalList = []
                            this.disposalProductList = []
                            $("#barcodePrintModal").modal('toggle')
                        },
                        downloadProductDiscountSlip(downloadRequestID) {
                            this.isLoading = true
                            let requestLink = '/api/warehouse/reconciliation/print'
                            let token = localStorage.getItem('token')

                            let itemInfo = {
                                download_id: downloadRequestID
                            }

                            addNewType(requestLink, itemInfo, token).then((result) => {
                                if (result.response.auth == true) {
                                    var link = document.createElement('a');
                                    link.href = result.response.fileLink;
                                    link.download = 'warehouse_reconciliation_details.pdf';
                                    link.dispatchEvent(new MouseEvent('click'));
                                }
                                this.isLoading = false
                            })
                        }
                    }
                })
            </script>

            <script>
                $(function () {
                    //Datetimepicker plugin
                    $('.datetimepicker').bootstrapMaterialDatePicker({
                        format: 'YYYY-MM-DD',
                        clearButton: true,
                        weekStart: 1,
                        time: false
                    });
                });
            </script>

            <% include ../../partials/footer %>